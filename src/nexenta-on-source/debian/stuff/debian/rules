#!/usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# Use v4 compatability mode, so ldconfig gets added to maint scripts.
#export DH_COMPAT=4

PACKAGE=$(shell dh_listpackages)
# unexport DEB flags
unexport CPPFLAGS
unexport CFLAGS
unexport CXXFLAGS
unexport FFLAGS
unexport LDFLAGS
unexport MAKELEVEL

# Location is used as ON work space
GATESUBDIR=illumos-gate
export GATEROOT=$(CURDIR)/$(GATESUBDIR)

CLOSEDBIN_NAME=on-closed-bins-nd.i386.tar.bz2 
CLOSEDBIN_URL=http://dlc.sun.com/osol/on/downloads/20100817/$(CLOSEDBIN_NAME)
CLOSEDBIN_URL=http://dlc.oracle.com/osol/on/downloads/20100817/$(CLOSEDBIN_NAME)
#GATEREV=onnv_134
#GATEPARENT_URL=ssh://anonhg@hg.illumos.org/illumos-gate
#GATEPARENT_URL=/net/10.3.10.2/volumes/data1/public-build/source/ncp4-gate
#GATEPARENT_URL=/net/10.3.10.2/volumes/data1/public-build/source/illumos-gate-pnfs
GATEPARENT_URL=/net/10.3.10.2/volumes/data1/public-build/source/illumos-gate


OS_REL := $(shell cat debian/RELEASE|egrep "^OS_REL="|sed -e 's/^OS_REL=\(.*\)/\1/')
BUILD  := $(shell cat debian/RELEASE|egrep "^BUILD="|sed -e 's/^BUILD=\(.*\)/\1/')
CORE_PATCH_LEVEL := $(shell cat debian/RELEASE|egrep "^CORE_PATCH_LEVEL="|sed -e 's/^CORE_PATCH_LEVEL=\(.*\)/\1/')
CORE_BUILD_REVISION=$(OS_REL)-$(BUILD)-$(CORE_PATCH_LEVEL)

DEBFULLNAME := $(shell cat debian/RELEASE|egrep "^DEBFULLNAME="|sed -e 's/^DEBFULLNAME=\(.*\)/\1/'|sed -e 's/"//g')
DEBEMAIL := $(shell cat debian/RELEASE|egrep "^DEBEMAIL="|sed -e 's/^DEBEMAIL=\(.*\)/\1/'|sed -e 's/"//g')
MAINTAINER := $(DEBFULLNAME) <$(DEBEMAIL)>

# Location where built packages will be uploaded..
APTDIR=/var/tmp/apt

PKG_BUILD_LOGS_DIR = $(CURDIR)/pkg_build_logs

# Location where Debian packages will be produced..
PKGDIR=/var/tmp/packages

define checkstudio
	@test -d /opt/SUNWspro/bin || \
	(echo SunStudio not installed, please run: /usr/sbin/ss12install;\
	exit 1)
endef

patch: patch-stamp
patch-stamp:
	dh_testdir
	$(checkstudio)
	if test ! -d $(GATEROOT); then \
		hg clone $(GATEPARENT_URL) $(GATESUBDIR); \
		echo "\\n[extensions]\\nmq=\\n" >> $(GATESUBDIR)/.hg/hgrc; \
		echo "\\n[ui]\\nusername=Gate-Keeper <gatekeeper@nexenta.com>\\n" >> $(GATESUBDIR)/.hg/hgrc; \
	else \
		cd $(GATEROOT); \
		hg pull; \
		hg up; \
	fi
	cp $(GATEROOT)/usr/src/tools/env/illumos.sh $(GATEROOT)
	cd $(GATEROOT) && cp usr/src/tools/scripts/bldenv.sh .
	cd $(GATEROOT) && cat $(CURDIR)/debian/illumos.patch | patch -p1
	cd $(GATEROOT) && gaterev=`hg log -l1 --template '{node|short}\n'` && sed -i -e "s#__GATEREV__#$$gaterev#" illumos.sh
	cd $(GATEROOT) && sed -i -e "s#__GATEROOT__#$(GATEROOT)#" illumos.sh
	if test ! -L $(GATEROOT)/.hg/patches; then cd $(GATEROOT) && ln -s ../../patches .hg/patches; fi
	cd $(GATEROOT) && hg qpush -a
	touch $@

setup-closed: setup-closed-stamp
setup-closed-stamp:
	dh_testdir
	rm -rf $(CLOSEDBIN_NAME)
	wget -c -O $(GATEROOT)/$(CLOSEDBIN_NAME) $(CLOSEDBIN_URL)
	#rm -rf $(GATEROOT)/closed
	cd $(GATEROOT) && tar xjf $(CLOSEDBIN_NAME)
	cd $(GATEROOT)/closed && ln -s root_i386-nd root_i386
	#cp debian/eventlog.dll $(GATEROOT)/usr/src/cmd/smbsrv/smbd
	touch $@
	
build-on: patch setup-closed build-on-stamp
build-on-stamp:
	dh_testdir
	install -d $(GATEROOT)/log
	cd $(GATEROOT) && env - ksh93 bldenv.sh -d illumos.sh -c "cd usr/src && dmake setup"
	cd $(GATEROOT) && cp usr/src/tools/scripts/nightly .
	cd $(GATEROOT) && ./nightly ./illumos.sh
	touch $@

gen-packages: gen-packages-stamp
gen-packages-stamp:
	BASEGATE="$(GATEROOT)" MAINTAINER="$(MAINTAINER)" PKGVER="$(CORE_BUILD_REVISION)" debian/ips2deb.pl | tee prepare_build_pkgs.log
	touch $@


#build-packages: build-on build-packages-stamp
build-packages: gen-packages-stamp build-packages-stamp
build-packages-stamp: gen-packages-stamp
	$(MAKE) -f debian/build_packages.make -j6 PKG_BUILD_LOGS_DIR=$(PKG_BUILD_LOGS_DIR) BASEGATE="$(GATEROOT)" build-packages
#	BASEGATE="$(GATEROOT)" debian/buildpkgs.sh
	touch $@

build: build-on build-packages build-stamp
build-stamp:
	dh_testdir
	echo 'sunw:Version=$(CORE_BUILD_REVISION)' >> debian/$(PACKAGE).substvars
	touch $@

# This target needs the patches to be still applied.
# If patch-stamp is not there, do nothing.
clobber_on:
	if test -f patch-stamp -a -d $(GATEROOT) ;then \
		cd $(GATEROOT) && env - ksh93 ./bldenv.sh ./illumos.sh 'cd usr/src ; dmake clobber' ;\
	fi

rm_log_proto:
	if test -d "illumos-gate/log" ; then \
			rm -r illumos-gate/log; \
	else \
			echo "no logs present"; \
	fi
	if test -d "illumos-gate/proto" ; then \
			rm -r illumos-gate/proto; \
	else \
			echo "no proto-dir present"; \
	fi

clean: clobber_on rm_log_proto
	dh_testdir
	dh_testroot
	rm -f pkgfailed.txt
	rm -rf debian/packages
	rm -f *-stamp
	rm -rf $(GATEROOT)/log
	dh_clean -d
	if test -d $(GATEROOT) ;then \
		cd $(GATEROOT) ; \
		hg qpop -a ;  \
	fi
	rm -f illumos.sh patch-stamp patches/status prepare_build_pkgs.log
	rm -f build-on-stamp build-stamp build-packages-stamp debian/files
	rm -rf $(PKG_BUILD_LOGS_DIR)

binary-indep: build

binary-arch: build
	dh_testdir
	dh_testroot
	dh_clean -k -d
	dh_installdirs
	dh_installdocs
	dh_installchangelogs
	dh_installdirs  usr/src/$(PACKAGE) usr/src/$(PACKAGE)/debian usr/src/$(PACKAGE)/patches
	cp debian/COPYRIGHT debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/NOS.pm debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/README debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/RELEASE debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/buildpkgs.sh debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/changelog debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/check-new-files.sh debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/check-rev.sh debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/compat debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/control debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/copyright debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/illumos.patch debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/ips2deb.pl debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/lookup-new-files-in-patch.pl debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/
	cp debian/rules debian/$(PACKAGE)/usr/src/$(PACKAGE)/debian/

	cp -a patches/* debian/$(PACKAGE)/usr/src/$(PACKAGE)/patches
	#cd debian/$(PACKAGE)/usr/src/$(PACKAGE) && hg up -C
	dh_compress
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary
