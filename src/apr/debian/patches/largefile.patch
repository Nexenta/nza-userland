Index: apr-1.4.5/configure.in
===================================================================
--- apr-1.4.5.orig/configure.in	2011-04-11 23:58:38.000000000 +0400
+++ apr-1.4.5/configure.in	2011-05-24 16:19:41.492871187 +0400
@@ -170,7 +170,7 @@
 
 dnl Enable the layout handling code, then reparse the prefix-style
 dnl arguments due to autoconf being a PITA.
-APR_ENABLE_LAYOUT(apr)
+APR_ENABLE_LAYOUT(Solaris-Apache2)
 APR_PARSE_ARGUMENTS
 
 dnl Set optional CC hints here in case autoconf makes an inappropriate choice.
@@ -1671,6 +1671,12 @@
                 socklen_t_value="int"
             fi
             ;;
+        *-solaris2*)
+           # sendfile64 doesn't work correctly with Apache (CR 6452545)
+           # (when LARGEFILE_SOURCE && _FILE_OFFSET_BITS == 64 are used)
+           sendfile="0"
+           ;;
+
     esac
 else
     socklen_t_value="int"
Index: apr-1.4.5/build/apr_hints.m4
===================================================================
--- apr-1.4.5.orig/build/apr_hints.m4	2011-04-12 21:35:55.000000000 +0400
+++ apr-1.4.5/build/apr_hints.m4	2011-05-24 16:19:41.503559012 +0400
@@ -245,12 +245,26 @@
 	;;
     *-solaris2*)
     	PLATOSVERS=`echo $host | sed 's/^.*solaris2.//'`
-	APR_ADDTO(CPPFLAGS, [-DSOLARIS2=$PLATOSVERS -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT])
+        APR_ADDTO(CPPFLAGS, [-DSOLARIS2=$PLATOSVERS -D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT])
         if test $PLATOSVERS -ge 10; then
             APR_SETIFNULL(apr_lock_method, [USE_PROC_PTHREAD_SERIALIZE])
         else
             APR_SETIFNULL(apr_lock_method, [USE_FCNTL_SERIALIZE])
         fi
+        APR_SETVAR(THREADED_CPPFLAGS, [])
+        if test "$enable_threads" != "no"; then
+            APR_ADDTO(THREADED_CPPFLAGS, [-D_POSIX_PTHREAD_SEMANTICS])
+            dnl If using native compiler, use recommended -mt option to ensure
+            dnl proper preprocessor definitions and library link order.
+            if $CC -flags 2>&1 | grep '^-mt.*multi-threaded' > /dev/null 2>&1; then
+                APR_ADDTO(THREADED_CPPFLAGS, [-mt])
+            else
+                APR_ADDTO(THREADED_CPPFLAGS, [-D_REENTRANT])
+            fi
+        fi
+        APR_ADDTO(CPPFLAGS, [-DSOLARIS2=$PLATOSVERS $THREADED_CPPFLAGS -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64])
+        APR_SETIFNULL(apr_lock_method, [USE_PROC_PTHREAD_SERIALIZE])
+
         # readdir64_r error handling seems broken on Solaris (at least
         # up till 2.8) -- it will return -1 at end-of-directory.
         APR_SETIFNULL(ac_cv_func_readdir64_r, [no])
