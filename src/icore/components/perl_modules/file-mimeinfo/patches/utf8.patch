--- File-MimeInfo-0.15.orig/lib/File/MimeInfo.pm	2011-10-11 13:19:48.000000000 +0400
+++ File-MimeInfo-0.15/lib/File/MimeInfo.pm	2011-10-11 13:25:54.422082810 +0400
@@ -106,7 +106,7 @@
 		return 'text/plain' if -z $file;
 	
 		open FILE, '<', $file || return undef;
-		binmode FILE, ':utf8' unless $] < 5.008;
+		binmode FILE, ':encoding(UTF8)' unless $] < 5.008;
 		read FILE, $line, 32;
 		close FILE;
 	}
@@ -155,7 +155,7 @@
 sub _hash_globs {
 	my $file = shift;
 	open GLOB, '<', $file || croak "Could not open file '$file' for reading" ;
-	binmode GLOB, ':utf8' unless $] < 5.008;
+	binmode GLOB, ':encoding(UTF8)' unless $] < 5.008;
 	my ($string, $glob);
 	while (<GLOB>) {
 		next if /^\s*#/ or ! /\S/; # skip comments and empty lines
@@ -201,7 +201,7 @@
 	for my $file (@descfiles) {
 		$desc = ''; # if a file was found, return at least empty string
 		open XML, '<', $file || croak "Could not open file '$file' for reading";
-		binmode XML, ':utf8' unless $] < 5.008;
+		binmode XML, ':encoding(UTF8)' unless $] < 5.008;
 		while (<XML>) {
 			next unless m!<comment\s*$att>(.*?)</comment>!;
 			$desc = $1;
@@ -234,7 +234,7 @@
 	for my $file (@files) {
 		next if grep {$_ eq $file} @done;
 		open MAP, '<', $file || croak "Could not open file '$file' for reading";
-		binmode MAP, ':utf8' unless $] < 5.008;
+		binmode MAP, ':encoding(UTF8)' unless $] < 5.008;
 		while (<MAP>) {
 			next if /^\s*#/ or ! /\S/; # skip comments and empty lines
 			chomp;
