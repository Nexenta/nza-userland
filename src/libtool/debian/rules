#!/usr/bin/make -f
# debian/rules for the Debian GNU Libtool package.
# Copyright Â© 2003, 2004 Scott James Remnant <scott@netsplit.com>

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

DEBIAN_REVISION=$(strip $(shell dpkg-parsechangelog | awk -F: '/^Version:/ {print $$NF}'))

# libltdl needs to conform to policy
CFLAGS = -Wall -g
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# Build libltdl the right way (tm)
DEB_HOST_ARCH      ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
ifeq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
	confflags += --build=$(DEB_HOST_GNU_TYPE)
#	make_check = yes
else
	confflags += --build=$(DEB_BUILD_GNU_TYPE) --host=$(DEB_HOST_GNU_TYPE)
	make_check = no
endif

ifneq (,$(findstring nocheck,$(DEB_BUILD_OPTIONS)))
	make_check = no
endif

# Takes too long
#ifeq (m68k, $(DEB_HOST_ARCH))
#	make_check = no
#endif

patch: patch-stamp
patch-stamp:
	QUILT_PATCHES=debian/patches quilt push -a || test $$? = 2
	touch patch-stamp

unpatch:
	QUILT_PATCHES=debian/patches quilt pop -a || test $$? = 2
	rm -rf patch-stamp debian/patched .pc

clean: clean-patched unpatch
clean-patched:
	dh_testdir
	dh_testroot
	rm -f build32-stamp config32-stamp build64-stamp config64-stamp
	dh_clean

	-[ ! -f Makefile ] || $(MAKE) -k distclean
	-rm config.log
	-rm -f *demo*.tar.gz
	find . -name 'stamp-*' | xargs rm -f
#	find . -name 'configure' | xargs rm -f
#	rm -f *.in */*.in
#	rm -f *.m4 */*.m4
#	find tests -name '*.in' -o -name '*.m4' | xargs rm -f
#	find libltdl/config -type f -a ! -name '*.m4sh' -a ! -name 'mkstamp' | xargs rm -f
#	rm -f libltdl/Makefile.am
#	rm -f libltdl/m4/ltversion.m4
#	rm -f COPYING INSTALL commit tests-failed
#	rm -f doc/libtool.info-1 doc/libtool.info-2
#	rm -f tests/testsuite
#	rm -f doc/version.texi doc/notes.txt doc/stamp-vti doc/libtool.info
	
	rm -rf debian/64 debian/32

# Undo the version change if there is any.
#	sed -i -e 's/@VERSION@.*/@VERSION@/' libtoolize.m4sh
#	sed -i -e 's/^\(#.*@VERSION@\).*/\1/' libltdl/config/ltmain.m4sh
#	sed -i -e 's/^VERSION.*/VERSION=@VERSION@/' libltdl/config/ltmain.m4sh


config64: config64-stamp
Makefile: config64
config64-stamp: patch-stamp
	dh_testdir
	dh_testroot
#	-[ ! -f Makefile ] || $(MAKE) -k distclean

#	sed -i -e 's/^#.*progname.*@VERSION@$$/& Debian-$(DEBIAN_REVISION)/' libtoolize.m4sh
#	sed -i -e 's/^#.*progname.*@VERSION@$$/& Debian-$(DEBIAN_REVISION)/' libltdl/config/ltmain.m4sh
#	sed -i -e 's/^VERSION.*/VERSION="@VERSION@ Debian-$(DEBIAN_REVISION)"/' libltdl/config/ltmain.m4sh
#	./bootstrap
	CONFIG_SHELL=/bin/bash /bin/bash \
		./configure --prefix=/usr \
		$(confflags) \
		CC="gcc -m64" \
		CPPFLAGS="-m64" \
		CXX="g++ -m64" \
		CXXFLAGS="-m64" \
		FFLAGS="-m64 -w" \
		CFLAGS="$(CFLAGS) -m64"

	touch config64-stamp


config32: config32-stamp
#Makefile: config-stamp
#Makefile: config64-stamp
config32-stamp: patch-stamp
	dh_testdir
	dh_testroot
	-[ ! -f Makefile ] || $(MAKE) -k distclean

#	These go into the libtool-doc `examples' directory.
#	Create them while we still have a clean source tree
#	for demo in cdemo demo depdemo f77demo fcdemo mdemo mdemo2 pdemo tagdemo; do \
#	    GZIP=--best tar zcf ./$$demo.tar.gz tests/$$demo; \
#	done

#	sed -i -e 's/^#.*progname.*@VERSION@$$/& Debian-$(DEBIAN_REVISION)/' libtoolize.m4sh
#	sed -i -e 's/^#.*progname.*@VERSION@$$/& Debian-$(DEBIAN_REVISION)/' libltdl/config/ltmain.m4sh
#	sed -i -e 's/^VERSION.*/VERSION="@VERSION@ Debian-$(DEBIAN_REVISION)"/' libltdl/config/ltmain.m4sh
#	./bootstrap
	CONFIG_SHELL=/bin/bash /bin/bash ./configure \
		--prefix=/usr \
		$(confflags) \
		CFLAGS="$(CFLAGS)"

	touch config32-stamp

config: config64

build64: build64-stamp
build64-stamp: config64-stamp
	dh_testdir
	dh_testroot

#	Fix some permissions
	chmod a+x tests/mdemo2-*.test

	$(MAKE)

	rm -rf debian/64
	$(MAKE) prefix=`pwd`/debian/64 install

	touch build64-stamp


build32: build32-stamp
build32-stamp: config32-stamp
	dh_testdir
	dh_testroot

#	Fix some permissions
	chmod a+x tests/mdemo2-*.test

	$(MAKE)

#	The system libtool script in Debian must be able to support
#	invoking gcc as cc
	echo '# ### BEGIN LIBTOOL TAG CONFIG: BINCC' >> libtool
	sed -n -e '/^# ### BEGIN LIBTOOL CONFIG/,/^# ### END LIBTOOL CONFIG/p' < libtool \
		| grep -B 2 -A 1 -e '^LTCC=' -e '^CC=' \
		| sed '/^--/d;s/gcc/cc/g' >> libtool
	echo '# ### END LIBTOOL TAG CONFIG: BINCC' >> libtool
	echo >> libtool

#	The system libtool script in Debian must be able to support
#	invoking g++ both by the g++ and c++ names.
	sed -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: CXX$$/,/^# ### END LIBTOOL TAG CONFIG: CXX$$/p' < libtool \
		| sed -e 's/CONFIG: CXX/CONFIG: BINCXX/g' \
		      -e 's/g++/c++/g' >> libtool
	echo >> libtool

#	Add our BINCC and BINCXX tags
	sed -e 's/^\(available_tags\)=\"\(.*\)\"/\1=\"\2 BINCC BINCXX\"/' \
		< libtool > libtool.tags
	mv libtool.tags libtool

#	Don't hardcode gcc path information, and don't use nostdlib
	sed -e 's/^\(predep_objects\)=.*/\1=""/' \
	    -e 's/^\(postdep_objects\)=.*/\1=""/' \
	    -e 's/^\(compiler_lib_search_path\)=.*/\1=""/' \
	    -e 's:^\(sys_lib_search_path_spec\)=.*:\1="/lib/ /lib/amd64/ /usr/lib/ /usr/lib/amd64/ /usr/gnu/lib/ /usr/gnu/lib/amd64/ /usr/X11R6/lib/ /usr/local/lib/":' \
	    -e 's/^\(archive_cmds=\".*\) -nostdlib /\1 /' \
	    -e 's/^\(archive_expsym_cmds=\".*\) -nostdlib /\1 /' \
	    < libtool > libtool.gcc-indep
	mv libtool.gcc-indep libtool

#	Make libtool executable again
	chmod 755 libtool

#	This generated HTML page goes into libtool-doc.
	cd doc && makeinfo libtool.texi
	cd doc && texi2html -monolithic libtool.texi


ifeq ($(make_check), yes)
#	Now make sure it works
	-$(MAKE) check || touch tests-failed
	-cat tests/testsuite.log
	@test ! -f tests-failed
endif

	rm -rf debian/32
	$(MAKE) prefix=`pwd`/debian/32 install

	touch build32-stamp


build: build64 build32

#install: build
#	dh_testdir
#	dh_testroot

# Build architecture-independent files here.
binary-indep: build64 build32
	dh_testdir -i
	dh_testroot -i

	dh_prep
	dh_installdirs

	mkdir -p `pwd`/debian/tmp/usr
	cp -ax `pwd`/debian/32/* `pwd`/debian/tmp/usr/

	dh_movefiles -i

	dh_installdocs -i
	dh_installinfo -plibtool-doc
	dh_installexamples -i
	dh_installchangelogs -i ChangeLog
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build64 build32
	dh_testdir -a
	dh_testroot -a

	dh_prep
	dh_installdirs

	mkdir -p `pwd`/debian/tmp/usr
	cp -ax `pwd`/debian/32/* `pwd`/debian/tmp/usr/
	mkdir -p `pwd`/debian/tmp/usr/lib/amd64
	cp -ax `pwd`/debian/64/lib/* `pwd`/debian/tmp/usr/lib/amd64

	dh_movefiles -a -Nlibtool
	dh_movefiles -plibtool

	# Create symlinks to the one in autotools-dev
#	rm -f debian/libtool/usr/share/libtool/config/config.guess
	rm -f debian/libtool/usr/share/libtool/config.guess
#	ln -s ../../misc/config.guess debian/libtool/usr/share/libtool/config
	ln -s ../misc/config.guess debian/libtool/usr/share/libtool
#	rm -f debian/libtool/usr/share/libtool/config/config.sub
	rm -f debian/libtool/usr/share/libtool/config.sub
#	ln -s ../../misc/config.sub debian/libtool/usr/share/libtool/config
	ln -s ../misc/config.sub debian/libtool/usr/share/libtool

	dh_installdocs -plibtool
	dh_installdocs -plibltdl7
	mkdir -p debian/libltdl-dev/usr/share/doc
	cd debian/libltdl-dev/usr/share/doc && ln -sf libltdl7 libltdl-dev
	dh_installman -plibtool debian/libtool.1 debian/libtoolize.1
	dh_installchangelogs -plibtool ChangeLog
	dh_installchangelogs -plibltdl7 ChangeLog
	dh_strip -a
	dh_link -a
	dh_compress -a
	dh_fixperms -a
	dh_makeshlibs -a -V
	dh_installdeb -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build64 build32 build config64 config32 config clean patch unpatch binary-indep binary-arch binary
