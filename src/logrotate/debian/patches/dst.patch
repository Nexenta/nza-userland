Closes: #278591
Patch from: Holger Weiss <holger@ZEDAT.FU-Berlin.DE>

If you call logrotate once a week between 00:00 and 01:00 AM and
daylight saving time is in effect, "weekly" rotations will be done only
once in two weeks.  E.g., the following crontab won't work as expected:

12 0 * * 1 /usr/sbin/logrotate

logrotate uses the tm struct "lastRotated" in order to find out whether
a logfile needs rotating.  "lastRotated" is filled by first setting
everything to zero, then setting the mday, month and year of the last
rotation and then calling mktime(3) in order to normalize the rest of
the struct.  The problem is that if daylight saving time is in effect,
mktime() will increment "lastRotated.tm_isdst" from 0 to 1 and push
"lastRotated" by one hour.  Hence, the current time will be compared
with the day of the last rotation, 01:00 AM.  This can be solved by
setting lastRotated.tm_isdst correctly prior to the mktime() call.


Index: logrotate-3.7.8/logrotate.c
===================================================================
--- logrotate-3.7.8.orig/logrotate.c	2009-08-14 23:21:10.700008741 +0100
+++ logrotate-3.7.8/logrotate.c	2009-08-14 23:21:20.180008420 +0100
@@ -140,6 +140,8 @@
 	new->lastRotated.tm_mon = now.tm_mon;
 	new->lastRotated.tm_mday = now.tm_mday;
 	new->lastRotated.tm_year = now.tm_year;
+	new->lastRotated.tm_hour = now.tm_hour;
+	new->lastRotated.tm_isdst = now.tm_isdst;
 
 	/* fill in the rest of the new->lastRotated fields */
 	lr_time = mktime(&new->lastRotated);
