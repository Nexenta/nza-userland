Description: Upstream changes introduced in version 40-0-0
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 ntop (40-0-0) unstable; urgency=low
 .
   * Updated to use new version scheme.
   * Use source format 3.0 (quilt).
   * debian/control:
     + Fixed libpcap dependency (Closes: #5667).
   * debian/rules:
     + Cleanup generated files.
   * debian/patches:
     + Separated ntop-xmldump.diff from direct upstream changes.
     + debian-changes-40-0-0 represent direct upstream changes so far from last
       versions.
 .
 The person named in the Author field signed this changelog entry.
Author: Kartik Mistry <kartik.mistry@nexenta.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- ntop-40-0.orig/util.c
+++ ntop-40-0/util.c
@@ -1551,19 +1551,24 @@ void handleFlowsSpecs(void) {
 	    newFlow->fcode = (struct bpf_program*)calloc(myGlobals.numDevices, sizeof(struct bpf_program));
 
             for(i=0; i<myGlobals.numDevices; i++) {
-              rc = pcap_compile(myGlobals.device[i].pcapPtr, &newFlow->fcode[i],
-                                flowSpec, 1, myGlobals.device[i].netmask.s_addr);
+              if(myGlobals.device[i].pcapPtr
+		 && (!myGlobals.device[i].virtualDevice)
+		 /* Fix courtesy of David Fabel <david.fabel@sudop.cz> */
+		 ) {
+		rc = pcap_compile(myGlobals.device[i].pcapPtr, &newFlow->fcode[i],
+				  flowSpec, 1, myGlobals.device[i].netmask.s_addr);
 
-              if(rc < 0) {
-                traceEvent(CONST_TRACE_WARNING, "Wrong flow specification \"%s\" (syntax error). "
-			   "It has been ignored.", flowSpec);
-                free(newFlow);
+		if(rc < 0) {
+		  traceEvent(CONST_TRACE_WARNING, "Wrong flow specification \"%s\" (syntax error). "
+			     "It has been ignored.", flowSpec);
+		  free(newFlow);
 
-		/* Not used anymore */
-		free(myGlobals.runningPref.flowSpecs);
-		myGlobals.runningPref.flowSpecs = strdup("Error, wrong flow specification");
-                return;
-              }
+		  /* Not used anymore */
+		  free(myGlobals.runningPref.flowSpecs);
+		  myGlobals.runningPref.flowSpecs = strdup("Error, wrong flow specification");
+		  return;
+		}
+	      }
             }
 
             newFlow->flowName = strdup(flowName);
--- ntop-40-0.orig/ntop.txt
+++ ntop-40-0/ntop.txt
@@ -1020,36 +1020,36 @@ SSEEEE AALLSSOO
 
 
 PPRRIIVVAACCYY NNOOTTIICCEE
-       By default at startup and at periodic intervals, the nnttoopp program  will
-       retrieve  a  file  containing current ntop program version information.
-       Retrieving this file allows this nnttoopp instance to confirm  that  it  is
+       By  default at startup and at periodic intervals, the nnttoopp program will
+       retrieve a file containing current ntop  program  version  information.
+       Retrieving  this  file  allows this nnttoopp instance to confirm that it is
        running the most current version.
 
-       The  retrieval is done using standard http:// requests, which will cre-
-       ate log records on the hosting system.  These log  records  do  contain
-       information  which  identifies  a specific nnttoopp site.  Accordingly, you
-       are being notified that this individually identifiable  information  is
+       The retrieval is done using standard http:// requests, which will  cre-
+       ate  log  records  on the hosting system.  These log records do contain
+       information which identifies a specific nnttoopp  site.   Accordingly,  you
+       are  being  notified that this individually identifiable information is
        being transmitted and recorded.
 
-       You  may  request - via the ----sskkiipp--vveerrssiioonn--cchheecckk run-time option - that
-       this check be eliminated.  If you  use  this  option,  no  individually
+       You may request - via the ----sskkiipp--vveerrssiioonn--cchheecckk run-time option  -  that
+       this  check  be  eliminated.   If  you use this option, no individually
        identifiable information is transmitted or recorded, because the entire
        retrieval and check is skipped.
 
-       We ask you to allow this retrieval and check, because it benefits  both
+       We  ask you to allow this retrieval and check, because it benefits both
        you and the nnttoopp developers.  It benefits you because you will be auto-
-       matically notified if the nnttoopp program  version  is  obsolete,  becomes
-       unsupported  or  is  no  longer current.  It benefits the developers of
-       nnttoopp because it allows us  to  determine  the  number  of  active  nnttoopp
-       instances,  and  the  operating  system/versions that users are running
-       nnttoopp under.  This allows us to focus development resources  on  systems
+       matically  notified  if  the  nnttoopp program version is obsolete, becomes
+       unsupported or is no longer current.  It  benefits  the  developers  of
+       nnttoopp  because  it  allows  us  to  determine  the number of active nnttoopp
+       instances, and the operating system/versions  that  users  are  running
+       nnttoopp  under.   This allows us to focus development resources on systems
        like those our users are using nnttoopp on.
 
-       The  individually  identifiable  information  is  contained  in the web
-       server log records which are automatically created each time  the  ver-
-       sion  file  is retrieved.  This is a function of the web server and not
-       of nnttoopp , but we do take advantage of it.  The log record shows the  IP
-       address  of  the  requestor (the nnttoopp instance) and a User-Agent header
+       The individually identifiable  information  is  contained  in  the  web
+       server  log  records which are automatically created each time the ver-
+       sion file is retrieved.  This is a function of the web server  and  not
+       of  nnttoopp , but we do take advantage of it.  The log record shows the IP
+       address of the requestor (the nnttoopp instance) and  a  User-Agent  header
        field.  We place information in the User-Agent header as follows:
 
            ntop/<version>
@@ -1123,7 +1123,7 @@ UUSSEERR SSUUPPPPOORRTT
 
 
 AAUUTTHHOORR
-       ntop's  author  is Luca Deri (http://luca.ntop.org/) who can be reached
+       ntop's author is Luca Deri (http://luca.ntop.org/) who can  be  reached
        at <deri@ntop.org>.
 
 
@@ -1132,11 +1132,11 @@ LLIICCEENNCCEE
 
 
 AACCKKNNOOWWLLEEDDGGMMEENNTTSS
-       The author acknowledges the Centro Serra of  the  University  of  Pisa,
+       The  author  acknowledges  the  Centro Serra of the University of Pisa,
        Italy (http://www-serra.unipi.it/) for hosting the ntop sites (both web
        and mailing lists), and Burton Strauss <burton@ntopsupport.com> for his
-       help   and   user   assistance.  Many  thanks  to  Stefano  Suin  <ste-
-       fano@ntop.org> and Rocco Carbone <rocco@ntop.org> for  contributing  to
+       help  and  user  assistance.  Many  thanks  to   Stefano   Suin   <ste-
+       fano@ntop.org>  and  Rocco Carbone <rocco@ntop.org> for contributing to
        the project.
 
 
--- ntop-40-0.orig/myrrd/config_aux.h
+++ ntop-40-0/myrrd/config_aux.h
@@ -39,7 +39,7 @@ char *strchr (), *strrchr ();
 #if HAVE_FP_CLASS_H
 #  include <fp_class.h>
 #endif
-
+#  define isinf(a) (fpclass(a) == FP_NINF || fpclass(a) == FP_PINF)
 /* for Solaris */
 #if (! defined(HAVE_ISINF) && defined(HAVE_FPCLASS))
 #  define HAVE_ISINF 1
--- ntop-40-0.orig/plugins/Makefile.in
+++ ntop-40-0/plugins/Makefile.in
@@ -355,9 +355,9 @@ $(srcdir)/Makefile.in:  $(srcdir)/Makefi
 	      exit 1;; \
 	  esac; \
 	done; \
-	echo ' cd $(top_srcdir) && $(ACLOCAL); $(ACLOCAL); $(AUTOMAKE) --gnu  plugins/Makefile'; \
+	echo ' cd $(top_srcdirgnu  plugins/Makefile'; \
 	cd $(top_srcdir) && \
-	  $(ACLOCAL); $(ACLOCAL); $(AUTOMAKE) --gnu  plugins/Makefile
+	gnu  plugins/Makefile
 .PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
