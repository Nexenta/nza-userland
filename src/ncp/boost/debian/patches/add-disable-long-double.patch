Add option --disable-long-double to Boost build procedure.
Specifying this option essentially allows us to ignore
a build failure.

c.f. http://lists.boost.org/boost-build/2008/11/20683.php

Reported upstream as https://svn.boost.org/trac/boost/ticket/2597


--- boost1.36-1.36.0.orig/libs/math/build/Jamfile.v2
+++ boost1.36-1.36.0/libs/math/build/Jamfile.v2
@@ -51,7 +51,15 @@
 sph_neumann
 ;
 
-compile has_long_double_support.cpp ;
+if --disable-long-double in [ modules.peek : ARGV ]
+{
+    build-long-double = false ;
+}
+else
+{
+    build-long-double = true ;
+    compile has_long_double_support.cpp ;
+}
 
 lib boost_math_tr1 : ../src/tr1/$(TR1_SOURCES).cpp
     :         
@@ -63,11 +74,14 @@
  	     <link>shared:<define>BOOST_MATH_TR1_DYN_LINK=1
    ;
 
+if $(build-long-double) = true
+{
 lib boost_math_tr1l : ../src/tr1/$(TR1_SOURCES)l.cpp
     :         
  	     <link>shared:<define>BOOST_MATH_TR1_DYN_LINK=1
  	     <dependency>has_long_double_support
    ;
+}
 
 lib boost_math_c99 : ../src/tr1/$(C99_SOURCES).cpp
     :         
@@ -79,12 +94,19 @@
  	     <link>shared:<define>BOOST_MATH_TR1_DYN_LINK=1
    ;
 
+if $(build-long-double) = true
+{
 lib boost_math_c99l : ../src/tr1/$(C99_SOURCES)l.cpp
     :         
  	     <link>shared:<define>BOOST_MATH_TR1_DYN_LINK=1
  	     <dependency>has_long_double_support
    ;
+}
 
 
-boost-install boost_math_c99 boost_math_c99f boost_math_c99l boost_math_tr1 boost_math_tr1f boost_math_tr1l ;
+boost-install boost_math_c99 boost_math_c99f boost_math_tr1 boost_math_tr1f ;
 
+if $(build-long-double) = true
+{
+boost-install boost_math_c99l boost_math_tr1l ;
+}
