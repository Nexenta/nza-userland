turbogears for Debian
---------------------

1. Introduction

This is the packaging of TurboGears for Debian. Lots of thought are needed on
how to best package aditional widgets, extensions and specially applications. If
you have comments or ideas, please send them to the maintainers email address.

2. SQLObject vs SQLAlchemy

SQLObject is the default ORM used by TurboGears; For the Debian
packaging we are providing patches which make using SQLAlchemy as the
primary ORM saner, though TG will prefer SQLObject if a working
version is installed.

3. Toolbox

Two of the Toolbox tools are disabled if you're using SQLAlchemy, for
they are not supported by that backend yet: Catwalk and
ModelDesigner. Yeah, I know. You can take advantage of those tools by
installing and using SQLObject.

4. Upgrading from Preview versions

4.1. Visit framework model change

This is the first stable release of TurboGears. Those who have been
using the preview versions will probably have already quickstarted
their applications using an earlier version. If you did so before
the 1.0b2 version (any Debian package version, in summary) and use
SQLObject with the Identity framework you will hit the following
problem when starting your applications under this release:

-- code starts here --
 [...]
 File "turbogears/visit/api.py", line 144, in before_main
   visit= _manager.new_visit_with_key( visit_key )
 File "turbogears/visit/sovisit.py", line 44, in new_visit_with_key
   visit= visit_class( visit_key=visit_key,
	 expiry=datetime.now() + self.timeout )
 File "sqlobject/declarative.py", line 94, in _wrapper
   return fn(self, *args, **kwargs)
 File "sqlobject/main.py", line 1214, in __init__
   self._create(id, **kw)
 File "sqlobject/main.py", line 1235, in _create
   raise TypeError, "%s() did not get expected keyword argument %s" % \
	 (self.__class__.__name__, column.name)
 TypeError: VisitIdentity() did not get expected keyword argument user_id
-- code ends here --

This is because the Visit framework model has been modified in the
1.0b2 version, which eventually evolved into 1.0 proper. You will have
to edit your model.py file manually. The VisitIdentity class became
Visit, and has the following definition:

-- code starts here --
 class Visit(SQLObject):
   class sqlmeta:
	 table = "visit"

   visit_key = StringCol(length=40, alternateID=True,
			   alternateMethodName="by_visit_key")
   created = DateTimeCol(default=datetime.now)
   expiry = DateTimeCol()

   def lookup_visit(cls, visit_key):
	 try:
	     return cls.by_visit_key(visit_key)
	 except SQLObjectNotFound:
	     return None
   lookup_visit = classmethod(lookup_visit)
-- code ends here --

After adding that to your model.py go to the
<application>/config/app.cfg configuration file and change the
visit.soprovider.model setting to point to <application>.model.Visit.
Don't forget to run `tg-admin sql create' after you do all that
to have the new table created in your database.

This information has been gathered from Christopher Arndt's blog:
http://paddyland.serveblog.net/article/14. Thanks! This information
will probably show up afterwards at:

       http://www.turbogears.org/download/upgrade.html

4.2. Problems viewing kid templates

You may also hit the following problem:

-- code starts here --
   [...]
   File "/var/lib/python-support/python2.4/kid/filter.py", line 28, in apply_matches
     item = stream.expand()
   File "/var/lib/python-support/python2.4/kid/parser.py", line 103, in expand
     for ev, item in self._iter:
   File "/var/lib/python-support/python2.4/kid/parser.py", line 174, in _track
     for p in stream:
   File "/var/lib/python-support/python2.4/kid/parser.py", line 218, in _coalesce
     for ev, item in stream:
   File "/home/kov/src/application/application/templates/mytemplate.py", line 37, in _pull
 TypeError: generate_content() takes exactly 1 argument (2 given)
-- code ends here --

This happens simply because your 'compiled' templates are incompatible
with a newer kid version; all you need to do is remove all the .pyc
files from the templates directory:

  $ rm <aplication>/templates/*pyc

This should make it work again.

 -- Gustavo Noronha Silva <kov@debian.org>  Fri,  5 Jan 2007 17:38:18 -0200
