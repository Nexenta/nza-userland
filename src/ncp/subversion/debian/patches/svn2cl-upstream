--- a/contrib/client-side/svn2cl/svn2cl.xsl
+++ b/contrib/client-side/svn2cl/svn2cl.xsl
@@ -56,8 +56,6 @@
 -->
 
 <!DOCTYPE xsl:stylesheet [
- <!ENTITY tab "&#9;">
- <!ENTITY newl "&#38;#xA;">
  <!ENTITY space "&#32;">
 ]>
 
@@ -119,7 +117,7 @@
    </xsl:otherwise>
   </xsl:choose>
   <!-- add newlines at the end of the changelog -->
-  <xsl:text>&newl;</xsl:text>
+  <xsl:text>&#xA;</xsl:text>
  </xsl:template>
 
  <!-- format one entry from the log -->
@@ -149,7 +147,7 @@
     <xsl:if test="($prevdate!=$date) or ($prevauthor!=$author)">
      <!-- add newline -->
      <xsl:if test="not(position()=1)">
-      <xsl:text>&newl;</xsl:text>
+      <xsl:text>&#xA;</xsl:text>
      </xsl:if>
      <!-- date -->
      <xsl:value-of select="$date" />
@@ -158,15 +156,15 @@
      <!-- author's name -->
      <xsl:apply-templates select="author" />
      <!-- two newlines -->
-     <xsl:text>&newl;</xsl:text>
-     <xsl:if test="$separate-daylogs!='yes'"><xsl:text>&newl;</xsl:text></xsl:if>
+     <xsl:text>&#xA;</xsl:text>
+     <xsl:if test="$separate-daylogs!='yes'"><xsl:text>&#xA;</xsl:text></xsl:if>
     </xsl:if>
    </xsl:when>
    <!-- write the log header -->
    <xsl:otherwise>
     <!-- add newline -->
     <xsl:if test="not(position()=1)">
-     <xsl:text>&newl;</xsl:text>
+     <xsl:text>&#xA;</xsl:text>
     </xsl:if>
     <!-- date -->
     <xsl:apply-templates select="date" />
@@ -175,7 +173,7 @@
     <!-- author's name -->
     <xsl:apply-templates select="author" />
     <!-- two newlines -->
-    <xsl:text>&newl;&newl;</xsl:text>
+    <xsl:text>&#xA;&#xA;</xsl:text>
    </xsl:otherwise>
   </xsl:choose>
   <!-- get paths string -->
@@ -195,7 +193,7 @@
    <!-- add a line break before the log message -->
    <xsl:choose>
     <xsl:when test="$breakbeforemsg='yes'">
-     <xsl:text>&newl;</xsl:text>
+     <xsl:text>&#xA;</xsl:text>
     </xsl:when>
     <xsl:when test="number($breakbeforemsg)&gt;0">
      <xsl:call-template name="newlines">
@@ -208,9 +206,9 @@
    </xsl:call-template>
   </xsl:variable>
   <!-- add newline here if separate-daylogs is in effect -->
-  <xsl:if test="$groupbyday='yes' and $separate-daylogs='yes'"><xsl:text>&newl;</xsl:text></xsl:if>
+  <xsl:if test="$groupbyday='yes' and $separate-daylogs='yes'"><xsl:text>&#xA;</xsl:text></xsl:if>
   <!-- first line is indented (other indents are done in wrap template) -->
-  <xsl:text>&tab;*&space;</xsl:text>
+  <xsl:text>&#x9;*&space;</xsl:text>
   <!-- set up the text to wrap -->
   <xsl:variable name="txt">
    <xsl:value-of select="$rev" />
@@ -382,23 +380,23 @@
   <xsl:param name="txt" />
   <xsl:variable name="normtxt" select="normalize-space($txt)" />
   <xsl:choose>
-   <xsl:when test="contains($txt,'&newl;')">
+   <xsl:when test="contains($txt,'&#xA;')">
      <!-- text contains newlines, do the first line -->
      <xsl:call-template name="wrap">
-      <xsl:with-param name="txt" select="substring-before($txt,'&newl;')" />
+      <xsl:with-param name="txt" select="substring-before($txt,'&#xA;')" />
      </xsl:call-template>
      <!-- print tab -->
-     <xsl:text>&tab;&space;&space;</xsl:text>
+     <xsl:text>&#x9;&space;&space;</xsl:text>
      <!-- wrap the rest of the text -->
      <xsl:call-template name="wrap">
-      <xsl:with-param name="txt" select="substring-after($txt,'&newl;')" />
+      <xsl:with-param name="txt" select="substring-after($txt,'&#xA;')" />
      </xsl:call-template>
    </xsl:when>
    <xsl:when test="(string-length($normtxt) &lt; (($linelen)-9)) or not(contains($normtxt,' '))">
     <!-- this is easy, nothing to do -->
     <xsl:value-of select="$normtxt" />
     <!-- add newline -->
-    <xsl:text>&newl;</xsl:text>
+    <xsl:text>&#xA;</xsl:text>
    </xsl:when>
    <xsl:otherwise>
     <!-- find the first line -->
@@ -420,7 +418,7 @@
     <!-- print line -->
     <xsl:value-of select="$line" />
     <!-- print newline and tab -->
-    <xsl:text>&newl;&tab;&space;&space;</xsl:text>
+    <xsl:text>&#xA;&#x9;&space;&space;</xsl:text>
     <!-- wrap the rest of the text -->
     <xsl:call-template name="wrap">
      <xsl:with-param name="txt" select="normalize-space(substring($normtxt,string-length($line)+1))" />
@@ -449,26 +447,26 @@
   <xsl:param name="txt" />
   <xsl:choose>
    <!-- find starting newlines -->
-   <xsl:when test="substring($txt,1,1) = '&newl;'">
+   <xsl:when test="substring($txt,1,1) = '&#xA;'">
     <xsl:call-template name="trim-newln">
      <xsl:with-param name="txt" select="substring($txt,2)" />
     </xsl:call-template>
    </xsl:when>
    <!-- find trailing newlines -->
-   <xsl:when test="substring($txt,string-length($txt),1) = '&newl;'">
+   <xsl:when test="substring($txt,string-length($txt),1) = '&#xA;'">
     <xsl:call-template name="trim-newln">
      <xsl:with-param name="txt" select="substring($txt,1,string-length($txt)-1)" />
     </xsl:call-template>
    </xsl:when>
    <!-- if the message has paragrapgs, find the first one -->
-   <xsl:when test="$reparagraph='yes' and contains($txt,'&newl;&newl;')">
+   <xsl:when test="$reparagraph='yes' and contains($txt,'&#xA;&#xA;')">
      <!-- remove newlines from first paragraph -->
-     <xsl:value-of select="normalize-space(substring-before($txt,'&newl;&newl;'))" />
+     <xsl:value-of select="normalize-space(substring-before($txt,'&#xA;&#xA;'))" />
      <!-- paragraph separator -->
-     <xsl:text>&newl;&newl;</xsl:text>
+     <xsl:text>&#xA;&#xA;</xsl:text>
      <!-- do the rest of the text -->
      <xsl:call-template name="trim-newln">
-      <xsl:with-param name="txt" select="substring-after($txt,'&newl;&newl;')" />
+      <xsl:with-param name="txt" select="substring-after($txt,'&#xA;&#xA;')" />
      </xsl:call-template>
    </xsl:when>
    <!-- remove more single newlines -->
@@ -485,7 +483,7 @@
  <!-- insert a number of newlines -->
  <xsl:template name="newlines">
   <xsl:param name="count" />
-  <xsl:text>&newl;</xsl:text>
+  <xsl:text>&#xA;</xsl:text>
   <xsl:if test="$count&gt;1">
    <xsl:call-template name="newlines">
     <xsl:with-param name="count" select="($count)-1" />
