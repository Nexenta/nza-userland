Index: trousers-0.3.4/src/tddl/tddl.c
===================================================================
--- trousers-0.3.4.orig/src/tddl/tddl.c	2011-04-07 11:17:31.775689964 +0400
+++ trousers-0.3.4/src/tddl/tddl.c	2011-04-07 11:28:04.444551554 +0400
@@ -18,13 +18,17 @@
 
 #include "trousers/tss.h"
 #include "trousers_types.h"
+#ifndef SOLARIS
 #include "linux/tpm.h"
+#endif
 #include "tcslog.h"
 #include "tddl.h"
 
 struct tpm_device_node tpm_device_nodes[] = {
+#ifndef SOLARIS
 	{"/dev/tpm0", TDDL_UNDEF, TDDL_UNDEF},
 	{"/udev/tpm0", TDDL_UNDEF, TDDL_UNDEF},
+#endif
 	{"/dev/tpm", TDDL_UNDEF, TDDL_UNDEF},
 	{NULL, 0, 0}
 };
@@ -41,8 +45,11 @@
 	/* tpm_device_paths is filled out in tddl.h */
 	for (i = 0; tpm_device_nodes[i].path != NULL; i++) {
 		errno = 0;
-		if ((tpm_device_nodes[i].fd = open(tpm_device_nodes[i].path, O_RDWR)) < 0)
+		if ((tpm_device_nodes[i].fd = open(tpm_device_nodes[i].path, O_RDWR)) < 0) {
+			fprintf(stderr, "Error opening %s: %s\n",
+				tpm_device_nodes[i].path, strerror(errno));
 			continue;
+		}
 
 		opened_device = &(tpm_device_nodes[i]);
 		return opened_device->fd;
@@ -109,11 +116,13 @@
 			/* fall through */
 		case TDDL_TRANSMIT_IOCTL:
 			errno = 0;
+#ifndef SOLARIS
 			if ((sizeResult = ioctl(opened_device->fd, TPMIOC_TRANSMIT, txBuffer)) != -1) {
 				opened_device->transmit = TDDL_TRANSMIT_IOCTL;
 				break;
 			}
 			LogWarn("ioctl: (%d) %s", errno, strerror(errno));
+#endif
 			LogInfo("Falling back to Read/Write device support.");
 			/* fall through */
 		case TDDL_TRANSMIT_RW:
@@ -183,6 +192,7 @@
 
 TSS_RESULT Tddli_Cancel(void)
 {
+#ifndef SOLARIS
 	int rc;
 
 	if (opened_device->transmit == TDDL_TRANSMIT_IOCTL) {
@@ -198,4 +208,6 @@
 	} else {
 		return TDDLERR(TSS_E_NOTIMPL);
 	}
+#endif /* SOLARIS */
+	return TDDLERR(TSS_E_NOTIMPL);
 }
