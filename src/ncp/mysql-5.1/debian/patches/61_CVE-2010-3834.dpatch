#! /bin/sh /usr/share/dpatch/dpatch-run
# Description: fix denial of service via derived table materializing.
# Origin: upstream, http://bazaar.launchpad.net/~mysql/mysql-server/mysql-5.1/revision/3461.2.1
# Origin: upstream, http://bazaar.launchpad.net/~mysql/mysql-server/mysql-5.1/revision/3461.1.26
# Bug: http://bugs.mysql.com/bug.php?id=55568

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' mysql-5.1-5.1.49~/mysql-test/r/join.result mysql-5.1-5.1.49/mysql-test/r/join.result
--- mysql-5.1-5.1.49~/mysql-test/r/join.result	2010-07-09 09:03:00.000000000 -0400
+++ mysql-5.1-5.1.49/mysql-test/r/join.result	2010-11-08 11:03:21.000000000 -0500
@@ -1184,4 +1184,20 @@
 NULL
 1
 DROP TABLE t1, t2, mm1;
+#
+# Bug #54468: crash after item's print() function when ordering/grouping 
+#             by subquery
+#
+CREATE TABLE t1(a INT, b INT);
+INSERT INTO t1 VALUES (), ();
+SELECT 1 FROM t1
+GROUP BY
+GREATEST(t1.a,
+(SELECT 1 FROM
+(SELECT t1.b FROM t1,t1 t2
+ORDER BY t1.a, t1.a LIMIT 1) AS d)
+);
+1
+1
+DROP TABLE t1;
 End of 5.1 tests
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' mysql-5.1-5.1.49~/mysql-test/t/join.test mysql-5.1-5.1.49/mysql-test/t/join.test
--- mysql-5.1-5.1.49~/mysql-test/t/join.test	2010-07-09 09:02:30.000000000 -0400
+++ mysql-5.1-5.1.49/mysql-test/t/join.test	2010-11-08 11:03:21.000000000 -0500
@@ -851,4 +851,54 @@
 SELECT t1.a FROM mm1,t1;
 DROP TABLE t1, t2, mm1;
 
+#--echo #
+#--echo # Bug #55568: user variable assignments crash server when used within
+#--echo #             query
+#--echo #
+#
+#
+# This test case is invalidated because of fix of bug 55531
+# The reason is that {1} is not a valid geometric collection.
+#
+#CREATE TABLE t1 (a INT);
+
+#INSERT INTO t1 VALUES (0), (1);
+
+#let $i=2;
+#while ($i)
+#{
+#  SELECT MULTIPOINT(
+#    1,
+#    (
+#      SELECT MULTIPOINT(
+#        MULTIPOINT(
+#          1,
+#          (SELECT COUNT(*) FROM (SELECT 1 FROM t1 GROUP BY a,a) d)
+#        )
+#      ) FROM t1
+#    )
+#  ) != COUNT(*) q FROM t1 GROUP BY a;
+#  dec $i;
+#}
+#
+#DROP TABLE t1;
+
+--echo #
+--echo # Bug #54468: crash after item's print() function when ordering/grouping 
+--echo #             by subquery
+--echo #
+
+CREATE TABLE t1(a INT, b INT);
+INSERT INTO t1 VALUES (), ();
+
+SELECT 1 FROM t1
+GROUP BY
+GREATEST(t1.a,
+         (SELECT 1 FROM
+          (SELECT t1.b FROM t1,t1 t2
+           ORDER BY t1.a, t1.a LIMIT 1) AS d)
+        );
+
+DROP TABLE t1;
+
 --echo End of 5.1 tests
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' mysql-5.1-5.1.49~/sql/field.cc mysql-5.1-5.1.49/sql/field.cc
--- mysql-5.1-5.1.49~/sql/field.cc	2010-07-09 08:34:53.000000000 -0400
+++ mysql-5.1-5.1.49/sql/field.cc	2010-11-08 11:03:21.000000000 -0500
@@ -1535,7 +1535,7 @@
   }
   else
     field->org_table_name= field->db_name= "";
-  if (orig_table)
+  if (orig_table && orig_table->alias)
   {
     field->table_name= orig_table->alias;
     field->org_col_name= field_name;
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' mysql-5.1-5.1.49~/sql/sql_select.cc mysql-5.1-5.1.49/sql/sql_select.cc
--- mysql-5.1-5.1.49~/sql/sql_select.cc	2010-07-09 08:34:57.000000000 -0400
+++ mysql-5.1-5.1.49/sql/sql_select.cc	2010-11-08 11:03:21.000000000 -0500
@@ -2378,13 +2378,8 @@
 
   cleanup(1);
  /* Cleanup items referencing temporary table columns */
-  if (!tmp_all_fields3.is_empty())
-  {
-    List_iterator_fast<Item> it(tmp_all_fields3);
-    Item *item;
-    while ((item= it++))
-      item->cleanup();
-  }
+  cleanup_item_list(tmp_all_fields1);
+  cleanup_item_list(tmp_all_fields3);
   if (exec_tmp_table1)
     free_tmp_table(thd, exec_tmp_table1);
   if (exec_tmp_table2)
@@ -2395,6 +2390,19 @@
   DBUG_RETURN(error);
 }
 
+
+void JOIN::cleanup_item_list(List<Item> &items) const
+{
+  if (!items.is_empty())
+  {
+    List_iterator_fast<Item> it(items);
+    Item *item;
+    while ((item= it++))
+      item->cleanup();
+  }
+}
+
+
 /**
   An entry point to single-unit select (a select without UNION).
 
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' mysql-5.1-5.1.49~/sql/sql_select.h mysql-5.1-5.1.49/sql/sql_select.h
--- mysql-5.1-5.1.49~/sql/sql_select.h	2010-07-09 08:34:56.000000000 -0400
+++ mysql-5.1-5.1.49/sql/sql_select.h	2010-11-08 11:03:21.000000000 -0500
@@ -577,6 +577,7 @@
   */
   bool implicit_grouping; 
   bool make_simple_join(JOIN *join, TABLE *tmp_table);
+  void cleanup_item_list(List<Item> &items) const;
 };
 
 
