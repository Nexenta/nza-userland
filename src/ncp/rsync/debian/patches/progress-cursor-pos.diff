From: Wayne Davison <wayned@samba.org>
Date: Sat, 5 Jul 2008 07:21:05 +0000 (-0700)
Subject: The --progress output now leaves the cursor at the end of the line
X-Git-Url: http://git.samba.org/?p=rsync.git;a=commitdiff_plain;h=bb4e4d889f51065dcef6f34d8ba4a80c051149a1;hp=93f3fbf73e2e2b1c2560482fb395c3f9a6835fc8

The --progress output now leaves the cursor at the end of the line
(instead of the start) in order to be extra sure that an error won't
overwrite it.  We also ensure that the progress option can't be enabled
on the server side.
---

Index: b/cleanup.c
===================================================================
--- a/cleanup.c	2011-08-26 17:48:09.544993077 +0400
+++ b/cleanup.c	2011-08-26 17:48:16.320779217 +0400
@@ -28,6 +28,7 @@
 extern int io_error;
 extern int keep_partial;
 extern int got_xfer_error;
+extern int progress_is_active;
 extern char *partial_dir;
 extern char *logfile_name;
 
@@ -123,6 +124,11 @@
 		exit_file = file;
 		exit_line = line;
 
+		if (progress_is_active) {
+			fputc('\n', stdout);
+			progress_is_active = 0;
+		}
+
 		if (verbose > 3) {
 			rprintf(FINFO,
 				"[%s] _exit_cleanup(code=%d, file=%s, line=%d): entered\n",
Index: b/log.c
===================================================================
--- a/log.c	2011-08-26 17:48:14.652823982 +0400
+++ b/log.c	2011-08-26 17:48:16.321541245 +0400
@@ -323,7 +323,7 @@
 		exit_cleanup(RERR_MESSAGEIO);
 	}
 
-	if (progress_is_active && !am_server) {
+	if (progress_is_active) {
 		fputc('\n', f);
 		progress_is_active = 0;
 	}
@@ -331,6 +331,12 @@
 	trailing_CR_or_NL = len && (buf[len-1] == '\n' || buf[len-1] == '\r')
 			  ? buf[--len] : 0;
 
+	if (len && buf[0] == '\r') {
+		fputc('\r', f);
+		buf++;
+		len--;
+	}
+
 #ifdef ICONV_CONST
 	if (ic != (iconv_t)-1) {
 		xbuf outbuf, inbuf;
Index: b/options.c
===================================================================
--- a/options.c	2011-08-26 17:48:09.630489823 +0400
+++ b/options.c	2011-08-26 17:48:16.322434669 +0400
@@ -1543,8 +1543,12 @@
 		log_before_transfer = !am_server;
 	}
 
-	if (do_progress && !verbose && !log_before_transfer && !am_server)
-		verbose = 1;
+	if (do_progress) {
+		if (am_server)
+			do_progress = 0;
+		else if (!verbose && !log_before_transfer && !am_server)
+			verbose = 1;
+	}
 
 	if (dry_run)
 		do_xfers = 0;
Index: b/progress.c
===================================================================
--- a/progress.c	2011-08-26 17:48:09.676919579 +0400
+++ b/progress.c	2011-08-26 17:48:16.323031545 +0400
@@ -71,6 +71,11 @@
 	double rate, remain;
 
 	if (is_last) {
+		snprintf(eol, sizeof eol,
+			" (xfer#%d, to-check=%d/%d)\n",
+			stats.num_transferred_files,
+			stats.num_files - current_file_index - 1,
+			stats.num_files);
 		/* Compute stats based on the starting info. */
 		if (!ph_start.time.tv_sec
 		    || !(diff = msdiff(&ph_start.time, now)))
@@ -79,6 +84,7 @@
 		/* Switch to total time taken for our last update. */
 		remain = (double) diff / 1000.0;
 	} else {
+		strlcpy(eol, "  ", sizeof eol);
 		/* Compute stats based on recent progress. */
 		if (!(diff = msdiff(&ph_list[oldest_hpos].time, now)))
 			diff = 1;
@@ -106,18 +112,13 @@
 			 (int) remain % 60);
 	}
 
-	if (is_last) {
-		snprintf(eol, sizeof eol, " (xfer#%d, to-check=%d/%d)\n",
-			stats.num_transferred_files,
-			stats.num_files - current_file_index - 1,
-			stats.num_files);
-	} else
-		strlcpy(eol, "\r", sizeof eol);
 	progress_is_active = 0;
-	rprintf(FCLIENT, "%12s %3d%% %7.2f%s %s%s",
+	rprintf(FCLIENT, "\r%12s %3d%% %7.2f%s %s%s",
 		human_num(ofs), pct, rate, units, rembuf, eol);
-	if (!is_last)
+	if (!is_last) {
 		progress_is_active = 1;
+		fflush(stdout);
+	}
 }
 
 void set_current_file_index(struct file_struct *file, int ndx)
