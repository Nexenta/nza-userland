autoconf (2.61-1) unstable; urgency=low
  
    This package should be largely compatible with older Autoconf releases
    back to 2.50, and especially with 2.59 and later.  Please read NEWS
    for details.

    Two changes bear especial emphasis.  First, quoting from the upstream
    NEWS:

    > ** Directory variables adjusted to recent changes in the GNU Coding
    > Standards.  The following directory variables are new:
    > 
    >     datarootdir   read-only architecture-independent data root [PREFIX/share]
    >     localedir     locale-specific message catalogs [DATAROOTDIR/locale]
    >     docdir        documentation root [DATAROOTDIR/doc/PACKAGE]
    >     htmldir       html documentation [DOCDIR]
    >     dvidir        dvi documentation [DOCDIR]
    >     pdfdir        pdf documentation [DOCDIR]
    >     psdir         ps documentation [DOCDIR]
    > 
    >   The following variables have new default values:
    > 
    >     datadir       read-only architecture-independent data [DATAROOTDIR]
    >     infodir       info documentation [DATAROOTDIR/info]
    >     mandir        man documentation [DATAROOTDIR/man]
    > 
    >   This means that if you use any of `@datadir@', `@infodir@', or
    >   `@mandir@' in a file, you will have to ensure `${datarootdir}' is
    >   defined in this file.  As a temporary measure, if any of those are
    >   found but no mention of `datarootdir', the substitutions will be
    >   replaced with values that do not contain `${datarootdir}', and a
    >   warning will be issued.

    This has proven to be a problem in some cases where the advice in the
    manual is not followed.  Please refer to the "Defining Directories"
    node in the manual, titled "How do I `#define' Installation
    Directories?", for more details.  (The manual can be obtained by
    installing the "autoconf-doc" package from the non-free distribution
    that accompanies Debian.)

    Here is a second item that bears mention, again from upstream NEWS:

    > ** AC_PROG_CC, AC_PROG_CXX
    >   No longer automatically arrange to declare the 'exit' function of C,
    >   when a C++ compiler is used.  Standard Autoconf macros no longer use
    >   'exit', so this is no longer an issue for them.  If you use C++, and
    >   want to call 'exit', you'll have to arrange for its declaration
    >   yourself.  But we now suggest you return from 'main' instead.

 -- Ben Pfaff <pfaffben@debian.org>  Sun, 26 Nov 2006 09:13:19 -0800
