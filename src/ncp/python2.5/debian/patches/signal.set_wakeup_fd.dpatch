#! /bin/sh -e

# DP: Backport new function signal.set_wakeup_fd from the trunk (documentation)

dir=
if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
    dir="$3/"
elif [ $# -ne 1 ]; then
    echo >&2 "usage: `basename $0`: -patch|-unpatch [-d <srcdir>]"
    exit 1
fi
case "$1" in
    -patch)
        patch $pdir -f --no-backup-if-mismatch -p0 < $0
        ;;
    -unpatch)
        patch $pdir -f --no-backup-if-mismatch -R -p0 < $0
        ;;
    *)
	echo >&2 "usage: `basename $0`: -patch|-unpatch [-d <srcdir>]"
        exit 1
esac
exit 0

Index: Doc/lib/libsignal.tex
===================================================================
--- Doc/lib/libsignal.tex	(revision 60376)
+++ Doc/lib/libsignal.tex	(working copy)
@@ -124,6 +124,23 @@
   Windows. (See the \UNIX{} man page \manpage{signal}{2}.)
 \end{funcdesc}
 
+\begin{funcdesc}{set_wakeup_fd}{fd}
+  Set the wakeup fd to \var{fd}.  When a signal is received, a
+  \code{\\0} byte is written to the fd.  This can be used by a library
+  to wakeup a poll or select call, allowing the signal to be fully
+  processed.
+
+  The old wakeup fd is returned.  \var{fd} must be non-blocking.  It
+  is up to the library to remove any bytes before calling poll or
+  select again.
+
+  When threads are enabled, this function can only be called from the
+  main thread; attempting to call it from other threads will cause a
+  \exception{ValueError} exception to be raised.
+
+  This is an Ubuntu specific addition, backported from 2.6.
+\end{funcdesc}
+
 \begin{funcdesc}{signal}{signalnum, handler}
   Set the handler for signal \var{signalnum} to the function
   \var{handler}.  \var{handler} can be a callable Python object
Index: Doc/api/exceptions.tex
===================================================================
--- Doc/api/exceptions.tex	(revision 60376)
+++ Doc/api/exceptions.tex	(working copy)
@@ -344,6 +344,18 @@
   % thread.interrupt_main() (used from IDLE), so it's still needed.
 \end{cfuncdesc}
 
+\begin{cfuncdesc}{void}{PyErr_SetWakeupFd}{int fd}
+  This utility function specifies a file descriptor to which a
+  \code{\\0} byte will be written whenever a signal is received.  It
+  returns the previous such file descriptor.  The value \code{-1}
+  disables the feature; this is the initial state.  This is equivalent
+  to \module{signal}.\function{set_wakeup_fd} in Python, but without
+  any error checking.  \var{fd} should be a valid file descriptor.
+  The function should only be called from the main thread.
+
+  This is an Ubuntu specific addition, backported from 2.6.
+\end{cfuncdesc}
+
 \begin{cfuncdesc}{PyObject*}{PyErr_NewException}{char *name,
                                                  PyObject *base,
                                                  PyObject *dict}
