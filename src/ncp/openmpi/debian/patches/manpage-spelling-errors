Description: Fix spelling errors in manpages
 This patch fixes minor spelling errors in several manpages.
Author: Manuel Prinz <manuel@debian.org>
Forwarded: https://svn.open-mpi.org/trac/ompi/ticket/2497
Applied-Upstream: https://svn.open-mpi.org/trac/ompi/changeset/23445
Last-Update: 2010-07-30

--- a/orte/tools/orterun/orterun.1in
+++ b/orte/tools/orterun/orterun.1in
@@ -683,7 +683,7 @@
 The \fI-nolocal\fP option prevents any processes from being mapped onto the
 local host (in this case node aa).  While \fImpirun\fP typically consumes
 few system resources, \fI-nolocal\fP can be helpful for launching very
-large jobs where \fImpirun\fP may actually need to use noticable amounts
+large jobs where \fImpirun\fP may actually need to use noticeable amounts
 of memory and/or processing time.
 .
 .PP
--- a/opal/tools/opal-restart/opal-restart.1in
+++ b/opal/tools/opal-restart/opal-restart.1in
@@ -63,7 +63,7 @@
 .TP
 .B -s | --self
 Restart this process using the \fIself\fR CRS component. This component is a
-special case, all other CRS components are automaticly detected.
+special case, all other CRS components are automatically detected.
 .
 .
 .TP
--- a/ompi/mpi/man/man3/MPI_Comm_split.3in
+++ b/ompi/mpi/man/man3/MPI_Comm_split.3in
@@ -35,7 +35,7 @@
 Control of subset assignment (nonnegative integer).
 .TP 1i
 key
-Control of rank assigment (integer).
+Control of rank assignment (integer).
 
 .SH OUTPUT PARAMETERS
 .ft R
--- a/ompi/mpi/man/man3/MPI_Grequest_start.3in
+++ b/ompi/mpi/man/man3/MPI_Grequest_start.3in
@@ -135,7 +135,7 @@
                bool \fIcomplete\fP);
 .fi
 .sp
-The \fIcancel_fn\fP function is invoked to start the cancelation of a generalized request. It is called by MPI_Request_cancel(request). MPI passes to the callback function complete=true if MPI_Grequest_complete has already been called on the request, and complete=false otherwise. 
+The \fIcancel_fn\fP function is invoked to start the cancellation of a generalized request. It is called by MPI_Request_cancel(request). MPI passes to the callback function complete=true if MPI_Grequest_complete has already been called on the request, and complete=false otherwise.
 
 .SH FORTRAN 77 NOTES
 .ft R
--- a/ompi/mpi/man/man3/MPI_Intercomm_create.3in
+++ b/ompi/mpi/man/man3/MPI_Intercomm_create.3in
@@ -26,7 +26,7 @@
 Intercomm Intracomm::Create_intercomm(int \fIlocal_leader\fP, const 
 	Comm& \fIpeer_comm\fP, int \fIremote_leader\fP, int \fItag\fP) const
 
-.SH INPUT PARAMTERS
+.SH INPUT PARAMETERS
 .ft R
 .TP 1i
 local_comm
--- a/ompi/mpi/man/man3/MPI_Keyval_create.3in
+++ b/ompi/mpi/man/man3/MPI_Keyval_create.3in
@@ -76,7 +76,7 @@
 .SH NOTES
 Key values are global (available for any and all communicators).
 .sp
-There are subtle differences between C and Fortran that require that the copy_fn be written in the same language that MPI_Keyval_create is called from. This should not be a problem for most users; only programers using both Fortran and C in the same program need to be sure that they follow this rule. 
+There are subtle differences between C and Fortran that require that the copy_fn be written in the same language that MPI_Keyval_create is called from. This should not be a problem for most users; only programmers using both Fortran and C in the same program need to be sure that they follow this rule.
 .sp
 Even though both formal arguments attribute_val_in
 and attribute_val_out are of type void*, their usage differs. The C copy function is passed by MPI in attribute_val_in the value of the attribute, and in attribute_val_out the address of the attribute, so as to allow the function to return the (new) attribute value. The use of type void* for both is to avoid messy type casts.  
