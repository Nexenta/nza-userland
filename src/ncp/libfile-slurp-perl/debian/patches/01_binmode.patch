diff -urNad libfile-slurp-perl-40-0/lib/File/Slurp.pm libfile-slurp-perl-40-0/lib/File/Slurp.pm
--- libfile-slurp-perl-40-0/lib/File/Slurp.pm	2006-02-17 16:13:51.000000000 +1000
+++ libfile-slurp-perl-40-0/lib/File/Slurp.pm	2009-09-15 18:08:48.812021963 +1000
@@ -126,7 +126,6 @@
 # a regular file. set the sysopen mode
 
 		my $mode = O_RDONLY ;
-		$mode |= O_BINARY if $args{'binmode'} ;
 
 #printf "RD: BINARY %x MODE %x\n", O_BINARY, $mode ;
 
@@ -138,6 +137,8 @@
 			goto &_error ;
 		}
 
+		binmode($read_fh, $args{'binmode'}) if $args{'binmode'};
+
 # get the size of the file for use in the read loop
 
 		$size_left = -s $read_fh ;
@@ -284,7 +285,6 @@
 # set the mode for the sysopen
 
 		my $mode = O_WRONLY | O_CREAT ;
-		$mode |= O_BINARY if $args->{'binmode'} ;
 		$mode |= O_APPEND if $args->{'append'} ;
 		$mode |= O_EXCL if $args->{'no_clobber'} ;
 
@@ -297,6 +297,8 @@
 			@_ = ( $args, "write_file '$file_name' - sysopen: $!");
 			goto &_error ;
 		}
+
+		binmode($write_fh, $args->{'binmode'}) if $args->{'binmode'};
 	}
 
 	sysseek( $write_fh, 0, SEEK_END ) if $args->{'append'} ;
@@ -526,10 +528,8 @@
 mode.
 
 	my $bin_data = read_file( $bin_file, binmode => ':raw' ) ;
-
-NOTE: this actually sets the O_BINARY mode flag for sysopen. It
-probably should call binmode and pass its argument to support other
-file modes.
+	# Or
+	my $bin_data = read_file( $bin_file, binmode => ':utf8' ) ;
 
 =head3 array_ref
 
@@ -628,10 +628,8 @@
 mode.
 
 	write_file( $bin_file, {binmode => ':raw'}, @data ) ;
-
-NOTE: this actually sets the O_BINARY mode flag for sysopen. It
-probably should call binmode and pass its argument to support other
-file modes.
+	# Or
+	write_file( $bin_file, {binmode => ':utf8'}, @data ) ;
 
 =head3 buf_ref
 
diff -urNad libfile-slurp-perl-40-0/t/utf8.t libfile-slurp-perl-40-0/t/utf8.t
--- libfile-slurp-perl-40-0/t/utf8.t	1970-01-01 10:00:00.000000000 +1000
+++ libfile-slurp-perl-40-0/t/utf8.t	2009-09-15 18:08:55.819972627 +1000
@@ -0,0 +1,19 @@
+use Test::More tests => 1;
+use strict; 
+use File::Slurp;
+my $fn="/tmp/utf8.txt";
+
+my $data="hallo grüezi blödel schaß und aus.\n";
+open F,">$fn";
+binmode(F, ":utf8");
+print F $data;
+close F;
+
+my $x=read_file($fn,binmode=>":utf8");
+ok($x eq $data,"utf8 encoded data survives slurp");
+unlink($fn);
+
+
+
+
+
