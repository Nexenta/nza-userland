diff -dubr corosync-1.4.2/configure.ac corosync-1.4.2.patched/configure.ac
--- corosync-1.4.2/configure.ac	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/configure.ac	2012-03-21 15:58:16.103459670 +0400
@@ -165,7 +165,7 @@
 
 ## helper for CC stuff
 cc_supports_flag() {
-	local CFLAGS="$@"
+	CFLAGS="$@"
 	AC_MSG_CHECKING([whether $CC supports "$@"])
 	AC_COMPILE_IFELSE([int main(){return 0;}] ,
 			  [RC=0; AC_MSG_RESULT([yes])],
@@ -329,10 +329,10 @@
 		AC_DEFINE_UNQUOTED([_SEM_SEMUN_UNDEFINED], [1],
 				   [The semun structure is undefined])
 		CP=rsync
-		OS_CFLAGS=""
-		OS_CPPFLAGS="-D_REENTRANT"
+		OS_CFLAGS="-std=gnu99"
+		OS_CPPFLAGS="-D_REENTRANT -D_POSIX_PTHREAD_SEMANTICS"
 		OS_LDFLAGS=""
-		OS_DYFLAGS="-Wl,-z,lazyload"
+		OS_DYFLAGS="-z lazyload"
 		DARWIN_OPTS=""
 		SOLARIS_OPTS=" "
 	;;
diff -dubr corosync-1.4.2/exec/coroipcs.c corosync-1.4.2.patched/exec/coroipcs.c
--- corosync-1.4.2/exec/coroipcs.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/exec/coroipcs.c	2012-03-21 15:17:02.535229823 +0400
@@ -355,12 +355,12 @@
 	}
 	if (flow_control_state == 0) {
 		log_printf (LOGSYS_LEVEL_DEBUG,
-			"Disabling flow control for %d\n",
+			"Disabling flow control for %ld\n",
 			conn_info->client_pid);
 	} else
 	if (flow_control_state == 1) {
 		log_printf (LOGSYS_LEVEL_DEBUG,
-			"Enabling flow control for %d\n",
+			"Enabling flow control for %ld\n",
 			conn_info->client_pid);
 	}
 
@@ -777,12 +777,12 @@
 	int on = 1;
 	struct ucred *cred;
 #endif
-	msg_recv.msg_flags = 0;
 	msg_recv.msg_iov = &iov_recv;
 	msg_recv.msg_iovlen = 1;
 	msg_recv.msg_name = 0;
 	msg_recv.msg_namelen = 0;
 #ifdef COROSYNC_LINUX
+	msg_recv.msg_flags = 0;
 	msg_recv.msg_control = (void *)cmsg_cred;
 	msg_recv.msg_controllen = sizeof (cmsg_cred);
 #endif
@@ -1507,7 +1507,7 @@
 	char fname[32];
 	char buf[256];
 
-	snprintf (fname, 32, "/proc/%d/stat", pid);
+	snprintf (fname, 32, "/proc/%ld/stat", pid);
 	fp = fopen (fname, "r");
 	if (!fp) {
 		return NULL;
@@ -1553,12 +1553,12 @@
 	if (conn->client_pid > 0) {
 		if (pid_to_name (conn->client_pid, proc_name, sizeof(proc_name))) {
 			snprintf (conn_name, sizeof(conn_name),
-				"%s:%s:%d:%d", proc_name,
+				"%s:%s:%ld:%d", proc_name,
 				short_service_name_get(conn->service, int_str, 4),
 				conn->client_pid, conn->fd);
 		} else {
 			snprintf (conn_name, sizeof(conn_name),
-				"proc:%s:%d:%d",
+				"proc:%s:%ld:%d",
 				short_service_name_get(conn->service, int_str, 4),
 				conn->client_pid,
 				conn->fd);
diff -dubr corosync-1.4.2/exec/coroparse.c corosync-1.4.2.patched/exec/coroparse.c
--- corosync-1.4.2/exec/coroparse.c	2011-09-22 12:22:09.000000000 +0400
+++ corosync-1.4.2.patched/exec/coroparse.c	2012-03-21 15:17:02.535973305 +0400
@@ -252,7 +252,11 @@
 	if (dp == NULL)
 		return 0;
 
+#if defined COROSYNC_SOLARIS && !defined NAME_MAX
+	len = offsetof(struct dirent, d_name) + pathconf(dirname, _PC_NAME_MAX) + 1;
+#else
 	len = offsetof(struct dirent, d_name) + NAME_MAX + 1;
+#endif
 
 	entry = malloc(len);
 	if (entry == NULL) {
@@ -309,7 +313,11 @@
 	if (dp == NULL)
 		return 0;
 
+#if defined COROSYNC_SOLARIS && !defined NAME_MAX
+	len = offsetof(struct dirent, d_name) + pathconf(dirname, _PC_NAME_MAX) + 1;
+#else
 	len = offsetof(struct dirent, d_name) + NAME_MAX + 1;
+#endif
 
 	entry = malloc(len);
 	if (entry == NULL) {
diff -dubr corosync-1.4.2/exec/evil.c corosync-1.4.2.patched/exec/evil.c
--- corosync-1.4.2/exec/evil.c	2011-09-22 12:22:09.000000000 +0400
+++ corosync-1.4.2.patched/exec/evil.c	2012-03-21 15:17:02.537089171 +0400
@@ -63,6 +63,9 @@
 #include <errno.h>
 #include <sched.h>
 #include <time.h>
+#ifdef COROSYNC_SOLARIS
+#include <utmpx.h>
+#endif
 
 #include <corosync/totem/totempg.h>
 #include <corosync/swab.h>
@@ -355,6 +358,18 @@
 		boot_time.tv_sec = time (NULL);
 	 /* (currenttime (s) - uptime (s)) * 1 billion (ns) / 1 (s) */
 	my_cluster_node.boot_timestamp = ((uint64_t)boot_time.tv_sec) * 1000000000ULL;
+#elif defined(COROSYNC_SOLARIS)
+	struct utmpx id, *line;
+	struct timeval boot_time;
+
+	id.ut_type = BOOT_TIME;
+	line = getutxid(&id);
+	if (line == NULL)
+		boot_time.tv_sec = time(NULL);
+	else
+		boot_time = line->ut_tv;
+	endutxent();
+	my_cluster_node.boot_timestamp = ((uint64_t)boot_time.tv_sec) * 1000000000ULL;
 #else /* defined(CTL_KERN) && defined(KERN_BOOTTIME) */
 	#warning "no bootime support"
 #endif
@@ -476,7 +491,7 @@
 	cpkt.chc_head.id =
 		SERVICE_ID_MAKE(EVT_SERVICE, MESSAGE_REQ_EXEC_EVT_CHANCMD);
 	cpkt.chc_head.size = sizeof(cpkt);
-	chn_iovec.iov_base = &cpkt;
+	chn_iovec.iov_base = (void *)&cpkt;
 	chn_iovec.iov_len = cpkt.chc_head.size;
 
 	if (evt_sync_state == EVT_SYNC_PART_ONE) {
diff -dubr corosync-1.4.2/exec/main.c corosync-1.4.2.patched/exec/main.c
--- corosync-1.4.2/exec/main.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/exec/main.c	2012-03-21 15:17:02.538456946 +0400
@@ -897,7 +897,7 @@
         unsigned int iov_len,
         unsigned int guarantee)
 {
-	const coroipc_request_header_t *req = iovec->iov_base;
+	const coroipc_request_header_t *req = (const void *)(iovec->iov_base);
 	int service;
 	int fn_id;
 	unsigned int key_incr_dummy;
@@ -1480,7 +1480,7 @@
 	}
 
 	memset (pid_s, 0, sizeof (pid_s));
-	snprintf (pid_s, sizeof (pid_s) - 1, "%u\n", pid);
+	snprintf (pid_s, sizeof (pid_s) - 1, "%ld\n", pid);
 
 retry_write:
 	if (write (lf, pid_s, strlen (pid_s)) != strlen (pid_s)) {
diff -dubr corosync-1.4.2/exec/Makefile.am corosync-1.4.2.patched/exec/Makefile.am
--- corosync-1.4.2/exec/Makefile.am	2011-09-22 12:22:09.000000000 +0400
+++ corosync-1.4.2.patched/exec/Makefile.am	2012-03-21 19:55:58.988774134 +0400
@@ -61,7 +61,7 @@
 			  ../lcr/lcr_ifact.c evil.c syncv2.c
 corosync_LDADD	  	= -ltotem_pg -llogsys -lcoroipcs
 corosync_DEPENDENCIES	= libtotem_pg.so.$(SONAME) liblogsys.so.$(SONAME) libcoroipcs.so.$(SONAME)
-corosync_LDFLAGS	= $(OS_DYFLAGS) -L./
+corosync_LDFLAGS	= $(OS_DYFLAGS) -L. $(nss_LIBS)
 
 TOTEM_OBJS		= $(TOTEM_SRC:%.c=%.o)
 LOGSYS_OBJS		= $(LOGSYS_SRC:%.c=%.o)
@@ -105,7 +105,7 @@
 	$(LD) $(LDFLAGS) -G $^ -o $@
 
 libtotem_pg.so.$(SONAME): $(TOTEM_OBJS)
-	$(LD) $(LDFLAGS) -G $(TOTEM_OBJS) -o $@ -lpthread
+	$(LD) $(LDFLAGS) $(nss_LIBS) -G $(TOTEM_OBJS) -o $@ -lpthread
 	ln -sf libtotem_pg.so.$(SONAME) libtotem_pg.so
 	ln -sf libtotem_pg.so.$(SONAME) libtotem_pg.so.$(SOMAJOR)
 
diff -dubr corosync-1.4.2/exec/totempg.c corosync-1.4.2.patched/exec/totempg.c
--- corosync-1.4.2/exec/totempg.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/exec/totempg.c	2012-03-21 15:17:02.539608516 +0400
@@ -1163,7 +1163,7 @@
 		iovec_mcast[i + 1].iov_base = (void *) instance->groups[i].group;
 	}
 	iovec_mcast[0].iov_len = (instance->groups_cnt + 1) * sizeof (unsigned short);
-	iovec_mcast[0].iov_base = group_len;
+	iovec_mcast[0].iov_base = (void *)group_len;
 	for (i = 0; i < iov_len; i++) {
 		iovec_mcast[i + instance->groups_cnt + 1].iov_len = iovec[i].iov_len;
 		iovec_mcast[i + instance->groups_cnt + 1].iov_base = iovec[i].iov_base;
@@ -1264,7 +1264,7 @@
 		iovec_mcast[i + 1].iov_base = (void *) groups[i].group;
 	}
 	iovec_mcast[0].iov_len = (groups_cnt + 1) * sizeof (unsigned short);
-	iovec_mcast[0].iov_base = group_len;
+	iovec_mcast[0].iov_base = (void *)group_len;
 	for (i = 0; i < iov_len; i++) {
 		iovec_mcast[i + groups_cnt + 1].iov_len = iovec[i].iov_len;
 		iovec_mcast[i + groups_cnt + 1].iov_base = iovec[i].iov_base;
diff -dubr corosync-1.4.2/exec/totemudp.c corosync-1.4.2.patched/exec/totemudp.c
--- corosync-1.4.2/exec/totemudp.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/exec/totemudp.c	2012-03-21 15:17:02.545320138 +0400
@@ -1443,6 +1443,7 @@
 	int addrlen;
 	int res;
 	int flag;
+    unsigned char byte_flag;
 
 	/*
 	 * Create multicast recv socket
@@ -1636,15 +1637,15 @@
 	 * Turn on multicast loopback
 	 */
 
-	flag = 1;
+	byte_flag = 1;
 	switch ( bindnet_address->family ) {
 		case AF_INET:
 		res = setsockopt (sockets->mcast_send, IPPROTO_IP, IP_MULTICAST_LOOP,
-			&flag, sizeof (flag));
+			&byte_flag, sizeof (byte_flag));
 		break;
 		case AF_INET6:
 		res = setsockopt (sockets->mcast_send, IPPROTO_IPV6, IPV6_MULTICAST_LOOP,
-			&flag, sizeof (flag));
+			&byte_flag, sizeof (byte_flag));
 	}
 	if (res == -1) {
 		LOGSYS_PERROR (errno, instance->totemudp_log_level_warning,
@@ -1655,10 +1656,10 @@
 	/*
 	 * Set multicast packets TTL
 	 */
-	flag = instance->totem_interface->ttl;
+	byte_flag = instance->totem_interface->ttl;
 	if (bindnet_address->family == AF_INET6) {
 		res = setsockopt (sockets->mcast_send, IPPROTO_IPV6, IPV6_MULTICAST_HOPS,
-			&flag, sizeof (flag));
+			&byte_flag, sizeof (byte_flag));
 		if (res == -1) {
 			LOGSYS_PERROR (errno, instance->totemudp_log_level_warning,
 				"set mcast v6 TTL failed");
@@ -1666,7 +1667,7 @@
 		}
 	} else {
 		res = setsockopt(sockets->mcast_send, IPPROTO_IP, IP_MULTICAST_TTL,
-			&flag, sizeof(flag));
+			&byte_flag, sizeof(byte_flag));
 		if (res == -1) {
 			LOGSYS_PERROR (errno, instance->totemudp_log_level_warning,
 				"set mcast v4 TTL failed");
Only in corosync-1.4.2.patched/exec: totemudp.c.orig
diff -dubr corosync-1.4.2/include/corosync/engine/coroapi.h corosync-1.4.2.patched/include/corosync/engine/coroapi.h
--- corosync-1.4.2/include/corosync/engine/coroapi.h	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/include/corosync/engine/coroapi.h	2012-03-21 15:17:02.546251805 +0400
@@ -35,7 +35,7 @@
 #define COROAPI_H_DEFINED
 
 #include <stdio.h>
-#ifdef COROSYNC_BSD
+#if defined COROSYNC_BSD || defined COROSYNC_SOLARIS
 #include <sys/uio.h>
 #endif
 #include <corosync/hdb.h>
diff -dubr corosync-1.4.2/init/generic.in corosync-1.4.2.patched/init/generic.in
--- corosync-1.4.2/init/generic.in	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/init/generic.in	2012-03-21 15:17:02.546764345 +0400
@@ -70,23 +70,10 @@
                 pidof -c -o $$ -o $PPID -o %PPID "${1##*/}"
 }
 
-cluster_disabled_at_boot()
-{
-       if grep -q nocluster /proc/cmdline && \
-          [ "$(tty)" = "/dev/console" ]; then
-               echo -e "not configured to run at boot"
-               failure
-               return 1
-       fi
-       return 0
-}
-
 start()
 {
 	echo -n "Starting $desc ($prog): "
 
-	! cluster_disabled_at_boot && return
-
 	# most recent distributions use tmpfs for @LOCALSTATEDIR@/run
 	# to avoid to clean it up on every boot.
 	# they also assume that init scripts will create
diff -dubr corosync-1.4.2/lib/Makefile.am corosync-1.4.2.patched/lib/Makefile.am
--- corosync-1.4.2/lib/Makefile.am	2011-09-22 12:22:09.000000000 +0400
+++ corosync-1.4.2.patched/lib/Makefile.am	2012-03-21 15:17:02.547350836 +0400
@@ -96,8 +96,8 @@
 	ln -sf libcoroipcc.so.$(SONAME) libcoroipcc.so
 	ln -sf libcoroipcc.so.$(SONAME) libcoroipcc.so.$(SOMAJOR)
 
-lib%.so.$(SONAME): lib%.a libcoroipcc.so.$(SONAME)
-	$(LD) $(SOLARIS_OPTS) $(call get_linker_add,$*) -G -whole-archive $^ -no-whole-archive -o $@
+lib%.so: lib%.a libcoroipcc.so.$(SONAME)
+	$(LD) $(SOLARIS_OPTS) $(call get_linker_add,$*) -G --whole-archive $^ --no-whole-archive -o $@
 	ln -sf lib$*.so.$(call get_soname,$*) lib$*.so
 	ln -sf lib$*.so.$(call get_soname,$*) lib$*.so.$(call get_major,$*)
 
diff -dubr corosync-1.4.2/test/cpgbench.c corosync-1.4.2.patched/test/cpgbench.c
--- corosync-1.4.2/test/cpgbench.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/test/cpgbench.c	2012-03-21 15:17:02.547939409 +0400
@@ -54,7 +54,7 @@
 #include <corosync/corotypes.h>
 #include <corosync/cpg.h>
 
-#ifdef COROSYNC_SOLARIS
+#if defined COROSYNC_SOLARIS && !defined timersub
 #define timersub(a, b, result)						\
     do {								\
 	(result)->tv_sec = (a)->tv_sec - (b)->tv_sec;			\
diff -dubr corosync-1.4.2/test/cpgbenchzc.c corosync-1.4.2.patched/test/cpgbenchzc.c
--- corosync-1.4.2/test/cpgbenchzc.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/test/cpgbenchzc.c	2012-03-21 15:17:02.548494276 +0400
@@ -54,7 +54,7 @@
 #include <corosync/corotypes.h>
 #include <corosync/cpg.h>
 
-#ifdef COROSYNC_SOLARIS
+#if defined COROSYNC_SOLARIS && !defined timersub
 #define timersub(a, b, result)						\
     do {								\
 	(result)->tv_sec = (a)->tv_sec - (b)->tv_sec;			\
diff -dubr corosync-1.4.2/test/evsbench.c corosync-1.4.2.patched/test/evsbench.c
--- corosync-1.4.2/test/evsbench.c	2011-07-21 11:52:19.000000000 +0400
+++ corosync-1.4.2.patched/test/evsbench.c	2012-03-21 15:17:02.549093204 +0400
@@ -54,7 +54,7 @@
 #include <corosync/corotypes.h>
 #include <corosync/evs.h>
 
-#ifdef COROSYNC_SOLARIS
+#if defined COROSYNC_SOLARIS && !defined timersub
 #define timersub(a, b, result)						\
     do {								\
 	(result)->tv_sec = (a)->tv_sec - (b)->tv_sec;			\
diff -dubr corosync-1.4.2/tools/corosync-notifyd.c corosync-1.4.2.patched/tools/corosync-notifyd.c
--- corosync-1.4.2/tools/corosync-notifyd.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/tools/corosync-notifyd.c	2012-03-21 15:17:02.618335747 +0400
@@ -51,6 +51,10 @@
 #include <signal.h>
 #include <syslog.h>
 
+#ifndef LOG_PERROR
+#define LOG_PERROR 0
+#endif
+
 #include <corosync/corotypes.h>
 #include <corosync/totem/coropoll.h>
 #include <corosync/confdb.h>
diff -dubr corosync-1.4.2/tools/corosync-pload.c corosync-1.4.2.patched/tools/corosync-pload.c
--- corosync-1.4.2/tools/corosync-pload.c	2011-09-22 12:27:15.000000000 +0400
+++ corosync-1.4.2.patched/tools/corosync-pload.c	2012-03-21 15:17:02.619256743 +0400
@@ -52,6 +52,7 @@
 #include <corosync/corotypes.h>
 #include <corosync/pload.h>
 
+#if defined COROSYNC_SOLARIS && !defined timersub
 #define timersub(a, b, result)						\
 do {									\
 	(result)->tv_sec = (a)->tv_sec - (b)->tv_sec;			\
@@ -61,6 +62,7 @@
 		(result)->tv_usec += 1000000;				\
 	}								\
 } while (0)
+#endif
 
 int main (void) {
 	pload_error_t result;
