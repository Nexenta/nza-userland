<?xml version='1.0' encoding='UTF-8'?>
<templatelist name='autosync' copyright='(C) 2006-2012 Nexenta Systems, Inc.' locale='de'>
<template module='AutoSync' name='replication_schedule_usage_sync'><![CDATA[
$cmdline
============================================================================
                               OVERVIEW
============================================================================
Auto-sync is a fully configurable (tunable), schedulable, fault-managed 
NexentaStor Data Replication service that can be used in a variety of 
backup, archiving, and DR scenarios. It transfers not only data, but 
metadata as well and creates full clone of the source folder at destination.

With $NZA::AUTO_SYNC you can create a fully synchronized copy of:

 * a volume
 * a folder
 * a folder with nested folders/zvols.
 * a zvol
on: 
    * local host
	* remote host(other NexentaStor appliance or another ZFS-based 
	filesystem)
	* from remote host to local
* Note: For local-to-remote (L2R) and remote-to-local (R2L) replication
a previously defined ssh-binding between the two hosts is required.

Run 'show network ssh-bindings' to list all hosts already ssh-bound
to the local appliance.
Run 'setup network ssh-bind' to setup a new ssh-binding.

To set up $NZA::AUTO_SYNC service run: 'setup auto-sync create' and follow
the interactive instructions. Alternatively, $NZA::AUTO_SYNC properties 
(i.e. source, destination, etc.) can be specified in non-interactive mode
during the service creation time. See the description of the optons below. 

Create $NZA::AUTO_SYNC service and schedule it to run at a given
time/interval.

$NZA::PRODUCT auto-aync service replicates the source filesystem,
including all snapshots up to the days defined by options '-k', '-a'.
The destination system must be ZFS based and must support taking
ZFS snapshots.

The service regularly and incrementally replicates a given source
folder and all nested sub-folders (except those that are excluded -
see exclude option) to another storage pool, whether local or remote.

============================================================================
	                         GENERAL SETTINGS
============================================================================
      Force
-------------------------------
    Allows auto-sync to do risky operations, such as: destroy
corrupted destination, destination rollback during replication, destination
auto-mount, etc. Enabled by default. The main differences between auto-sync
with enabled force option and without:
           1. Normally, service can't rename folder during volume-to-volume 
		   replication operation.  If force is enabled then autosync will 
		   destroy folders on destination.
           2. If force is enabled Auto-sync would use any snapshots 
		   (manually created) for replication, not just markers (created 
		   by auto-sync). 
		   For example, if user made a snapshot on source on the next 
		   iteration auto-sync uses this snapshot as marker without 
		   any warnings.
           3. If force is enabled, service will try to delete snapshots 
		   on destination that are newer than marker snapshot on source.

Force property is a bit flags field:
    0 - No force privileges.
    1* - Default force privileges.
    2 - destroy snapshots (manually created) on destination.
    4 - destroy folders on destination. This is used for volume to volume
        services.
    8 - do rollback at destination.
    16 - do 'zfs recv' with -F flag.
    32 - use any snapshots for replication, including manually created.
If force property is equal to 1, then default previligies will be given to
service: all, but do 'zfs recv' with -F flag. See User Guide for more 
information, section "Force flags".

   dircontent '/*'
-------------------------------
   Replication source may appears as:
   1) <source URL>/. - replicate folder and its subfolders
   and
   2) <source URL>/* - replicate only subfolders (content of the directory)
   In NMV this option is called 'Replicate content'. Read More In Auto-Sync
   User Guide.
   The difference between the two is easier to demonstrate on example.
   Let's say, the folder that is being replicated is 'vol1/a' and
   it contains sub-folder 'b':

   `-- vol1
       `-- a
            `-- b

    Let's now say that the destination is vol2/x, possibly
    on a different host. If the source is 'vol1/a' (replicate source
	folder and its subfolders) the resulting destination, after service 
	has run, will look like:

   `-- vol2
       `-- x
            `-- a
            	`-- b

    However, if the source is 'vol1/a/*' (notice the '*' - replicate only 
	subfolders), result of the replication will be different:

   `-- vol2
       `-- x
           `-- b

    Easy to remember: '/*' means - only the content.
	Read more about 'Replicate Content' option in Auto-Sync User Guide.
	
	Multi-destination
 ---------------------------------------
  Auto-sync provides the posibility to specify few destinations for one 
  replication service. This functionality can be used in various Disaster
  Recovery scenarios. For example, two destinations are specified for 
  Auto-Sync service. If one of them becomes unavailable, Auto-Sync continues
  to replicate the data to the other. When the first destination becomes 
  up again, Auto-Sync smoothly continues to replicate to both destinations.
  This feature works only for Local-to-Remote services, but several local
  destinations may be added in addition to remote ones.
  
============================================================================
	                      ADVANCED SETTINGS
============================================================================   

   Autoclone 
-------------------------------
Automatically creates and mounts replicated filesystem to provide the 
possibility to do the changes on the destination without risk to ruin 
the service. To enable Autoclonning in NMC, run: 'setup auto-sync create -c'
Created clone is based on '-latest' snapshot, and is recreated each time
after successfull replication.

   Reverse capability 
-------------------------------
Enabling this option provides possibility to use auto-sync service in 
Disaster Recovery scenario. This option must be enabled on the service 
creation time, or later using: 
  $prompt setup $NZA::AUTO_SYNC :<service-name> $NMC::REVERSE_DIRECTION'

Same command is used to make reverse-direction:
  ${prompt} setup auto-sync :<service-name> reverse-direction
This command will: 
            1. Unmount source folder
            2. Replicate last delta (since last scheduled run).
            3. Mount folder on destination appliance and make 
			auto-sync work in reverse direction, if second 
			appliance is up.
* Note: Reverse capability is designed for advanced usage only. Try it on
testing appliance first. 
Read more about Disaster Recovery scenarios in Auto-Sync User Guide.

   Transport Protocols
-------------------------------
The supported $NZA::AUTO_SYNC transport protocols are:

 * $NZA::PROTO_ZFS_RR://    - Remote Replication (rr) protocol is used by 
                            default and can't be changed in NMV. It 
							requires both source and destination to be
                            NexentaStor appliances.
							Remote replication protocol is a native 
							NexentaStor transport. It is designed as
							a multi-threaded multi-connection end-to-end
							protocol for maximum efficiency.
							The protocol doesn't yet provide secure 
							replication, but it is reliable and fast.
							Secure replication will be added in upcoming
							release.
 * $NZA::PROTO_ZFS_SSH://   - Can be used as an altrnative to RR transport
                            protocol. If source is a NexentaStor appliance
							and destination is another ZFS-based system,
							then replication via SSH can be used. There is
							no possibility to change default RR protocol
							in NMV. It can only be set up manually in NMC.
							Here is an example of creating L2R auto-sync 
							service via SSH protocol: 
							'${prompt} setup auto-sync create -s 
							zfs+ssh://localhost/data/fol1 -d 
							zfs+ssh://root\@192.168.1.1/pool/fol2'
							Note: Changing transport protocol operation is
                            only available in non-interactive mode. Use ssh 
							transport protocol with different than 
							NexentaStor ZFS-based operating system on your 
							own risk.						
 * $NZA::PROTO_ZFS://       - Local replication is done via native auto-sync
                            capabilities.

The default choice for $NZA::AUTO_SYNC is: zfs based transport, one of:

 * $NZA::PROTO_ZFS_SSH://   - use it for any ZFS-based remote system
 * $NZA::PROTO_ZFS_RR://    - use it for NexentaStor-based remote system
 * $NZA::PROTO_ZFS://       - to setup auto-sync service locally
 
Independently of its underlying transport, $NZA::AUTO_SYNC always
re-creates source snapshots at the destination.
 
   latest-suffix 
-------------------------------
This option provides the possibility to specify user's suffix for the
latest snapshot. To set up custom suffix, run 'setup auto-sync <service
name> property latest-suffix' or '-x' option.

   Run only once
-------------------------------
Auto-Sync service can be scheduled to run only once. This option is only 
available from NMC. Run 'setup auto-sync create -1'. After service execution
it changes status to 'disabled'. Later it can be enabled for normal operation.

   Multiple TCP connections, trunking.
-------------------------------
Auto-sync replication via Remote Replication (RR) transport protocol allows
to set the number of TCP connections. By default, it is set to 4. It can be
changed by running: 'setup auto-sync :service-name property options' and 
specifying '-n' value. Note, that it only works for Remote Replication 
protocol. Auto-sync allows specify multiply addresses for each destination,
so each TCP connection will use different address, NIC.

   Maximum PDU size 
-------------------------------
Auto-Sync allows to change maximum package size for replication. By default,
it is set to 1024 kB. It can be changed by running: 'setup auto-sync 
:service-name property options' and specifying '-P' value.

============================================================================
                         NON-INTERACTIVE MODE OPTIONS
============================================================================
Usage: setup auto-sync create [OPTION]...
Example: setup auto-sync create -s zfs+rr://root\@192.168.1.1/backup      
     or
         create auto-sync -s zfs+rr://root\@192.168.1.1/backup
	  
	   [-s source] [-d destination] [-m mountpoint] [-y] [-p period]
       [-e patt1|patt2|...] [-D day] [-T time] [-i interval]
       [-k keep_src]
       [-a keep_dst]
       [-c]
       [-1]
       [-l limit_rate]
       [-I comment]
       [-N]
       [-g]
       [-x latest_suffix] [-Z]
	   [-R]
	   [-S snapshot_name]
	   [-t]
	   [-u] custom_name
	   [-F]

  -s <source>	 Replication source. If specified in the command
  			line, the source of $NZA::AUTO_SYNC replication
			contains the following 3 elements:
			   (a) protocol (a.k.a. data transport)
			   (b) hostname
			   (c) fully qualified source folder name
			and has the following layout:
			[<protocol>://]<hostname>/<folder-name>
			     The -s option allows to specify a given
			     (statically named) snapshot as the source
			     of $NZA::AUTO_SYNC replication
			     This may be a useful additional option for
			     run-only-once service (see option -1 above)
			     and in certain custom usage scenarios.
			     (Compare with the -S 'create $NZA::AUTO_TIER'
			     option)
			Examples:
			     zfs+rr://operator\@192.168.1.57/rpool
			     zfs+ssh://localhost/data/movies
				 zfs://localhost/pool1/jason

  -d <destination>	Replication destination. If specified in the
  			command line, the destination of $NZA::AUTO_SYNC
			replication contains the following 3 elements:
			   (a) protocol (a.k.a. data transport)
			   (b) hostname
			   (c) fully qualified destination folder name
			and has the following layout:
			[<proto>://]<hostname>/<folder-name>
                * TIP *
		        First time users and beginners: do not specify
			source and destination in the command line.
			Use NMC dialogs. Use NMC recording facility
			('record').
			Examples:
			     zfs+rr://jack\@atlanta.mycorp.com/backup
  
  -R       Auto-sync Resume. Skip validation of source and 
           destination.
		   By-default, Auto-sync service requires an empty destination.
		   In case you want to recreate a service, which already contains
		   Auto-sync's marker snapshots on both sides, use '-R' option
		   to skip folder's validation and succesfully resume/re-create
		   the service.

  -m <mountpoint>	Automatically mounts replicated filesystems
						
  -y		Skip confirmation by automatically answering Yes

  -k <keep_src> -a <keep_dst> Snapshot retention policy. Parameter
			 defines the number of snapshots at source and at destination.
			 Specifies snapshot retention policy. The following format may
			 also be used: YDHMS, for example 1y10d12h30m10s means store
			 snapshots 1 year 10 days 12 hours 30 minutes and 10 seconds.
			 10d - means store snapshots for 10 days.

  -e <pattern1|patt2|...>   exclude folders matching specified pattern,
			or list of patterns. Pattern syntax is the same used in 
			various Unix shells for file/directory name filtering.
			Use '|' delimiter to specify more than one matching pattern.
			For instance, use -e *.old  to skip replicating folders with
			.old extension. Use single or double quotation marks to
			specify multiple exclude patterns, for instance:
		         -e 'data/home/joe|data/home/mike'
		         -e "data/home/joe|data/home/mike"
                * NOTE *
			By default, all folders are included, and
		       	the -e option is assumed to be omitted.
			This option is not inquired via
			NMC 'create $NZA::AUTO_SYNC' dialogs. You can either
			specify folders to be excluded via command
			line (and -e option) at service creation time,
			or via NMC 'setup $NZA::AUTO_SYNC <name> property'
			at any later time.

  -x <latest_suffix>	It is often convenient to have the latest
  			(the most recent) snapshot have a fixed name.
			The -x option allows to use custom suffix for
			the latest (the most recently taken) snapshot.
			If option is not used, latest snapshots would not be
			taken.
                * NOTE *
			The -x option is not inquired via NMC 'create $NZA::AUTO_SYNC'
			dialogs. You can either specify naming for the most
			recent snapshot via command line (and the -x option)
			at service creation time, or via NMC 'setup $NZA::AUTO_SYNC
			<name> property' at any later time.

  -1			Run only once, according to schedule.
  			This option allows to schedule $NZA::AUTO_SYNC
			service to run just one time, at a scheduled
			time.
			After executing, the service automatically
			transitions to a disabled state.
			You can re-enable the service at any later
			time, to, again, execute it just once in
			accordance to its schedule.
                * NOTE *
			Similar to the previous options, the -1 option
			is not inquired via
			NMC 'create $NZA::AUTO_SYNC' dialogs.
			If not specified in the command line, the service
			will execute periodically at scheduled intervals.

  -T <time of day>	Time of the day (e.g.: 3am, 6:45pm)

  -D <day of the month>	Day of the month (1..31)

  -i <interval>		Time interval.
  			Units to measure the period of time between two
			consecutive runs of the service. For additional
			information, please see 'help data-replication'
			The value is one of:
  			  * second
			  * minute
			  * hourly
			  * daily
			  * weekly
			  * monthly

  -p <period>		One or more "intervals" (above). For instance,
  			an hourly service with a period equal '4' will run
			every 4 hours.

  -c		Automatically clones replicated folders at the destination.
			(auto-clone)

  -l <number>		In kbytes/s. Limits maximum speed of replication.
  			Used to manually allocate resources during
			copying.

  -u <custom_name> Give service custom name. Name may exist of lower-
			case letters, numbers and '-', '_' signs.
			Name should start with letter.

  -I <comment>		Any text. Optional comment that helps to identify
  			the purpose of this service, its criticality,
  			business related aspects, name of the
			destination, etc.
			Use this option to add any relevant context.
			Informational comment can be modified or added
			after the service is created.
			Hint: to see all modifiable properties, run:
			'setup $NZA::AUTO_SYNC <name> property'
			and press TAB-TAB

  -r		Recursively replicates from a given source folder.
                * NOTE *
			This option only takes an effect if source is a folder, and
			is ignored if source is a zvol

  -N		Destroys the source and destination snapshots non-recursively.
			Use this option to prevent recursive zfs operations. If
			this option is enabled, then zfs destroy operation performs
			directly on each nested dataset.

  -g 		Creates service which will be able to use
  			'reverse-direction' command. Can be used only for
			$NZA::AUTO_SYNC service between two NexentaStor
			appliances. Service's definition will be created
			on both appliances. This appliance will be master,
  			and other one will be non-master.

  -Z 		Automatically unmaps zvols during 'reverse-direction'

  -E 		Runs $NZA::AUTO_SYNC service in daemon mode. This means
            that process is not restarted every time replication
			runs, and process do scheduling by itself. This option
			is automatically applied to services running every
			few seconds interval. For other periods should be
			selected manually.
	
  -S        Sync from the specified snapshot. This option allows to choose
            a snapshot from which to start the replication.			
            Example:
		${prompt} setup auto-sync create -S volname/foldername\@snapshotname

  -t        TCP trunking. It is possible to use more than one hostname
            or IP for each destination. In this case network stream will be 
            split along NICs for higher bandwidth throughput.

            Property represents the list of ssh-bound hosts with additional
            IP/host addresses. Rule to define additional addresses is
            following: "ssh_bound_host1/additionalip1,
            additionalip2 ssh_bound_host2/additionalip3,
            additionalip3 ..."

  -F        Generate notifications. This option allows to identify,
            track and resolve any issues affecting $NZA::AUTO_SYNC work.
            Fault report is also sent by e-mail, if mailer is properly
            configured.

The following are "non-interactive" usage examples. When creating
$NZA::AUTO_SYNC (or any other) storage service instance,
you can  always "fallback" into dialog mode by running and fill out
the requested fields interactively. Moreover, a combination of NMC
recording facility (see 'record -h') and 'create $NZA::AUTO_SYNC'
dialogs gives the best of both:

 * interactive (guided) filling-out of the $NZA::AUTO_SYNC parameters
and
 * ability to execute the "recorded" command many times,
   on many different $NZA::PRODUCT appliances.

Examples:

${prompt}create $NZA::AUTO_SYNC -y -s data/users -d $NZA::PROTO_ZFS_SSH://zfs-server/data -k 5 -a 60 -i hourly

  This would set up replication to another ZFS server, creating a ZFS
  folder called 'users' under the volume 'data' on the destination.
  Snapshots will be maintained at the target for 60 days and 5 days at 
  source. Replication will run hourly. Note that the folder 'users' 
  must not have been created yet on the target.

----------------------------------------------------------------------------
* Note: For background, general information, features and capabilities of 
the appliance's 2nd tier data services, please see:

${prompt}help data-replication

For differences between $NZA::PRODUCT $NZA::AUTO_TIER and $NZA::AUTO_TIER
services, and related discussion, please also see F.A.Q. pages on the
website.
============================================================================
                          CHANGES AT DESTINATION
============================================================================

   There is one common mistake, in terms of using $NZA::AUTO_SYNC,
   and this is related to changes at its destination.

   Note, that it is recommended not to mount the $NZA::AUTO_SYNC 
   destination. Generally, mounting $NZA::AUTO_SYNC destination is an 
   attribute change performed on the destination folder (filesystem).

   More importantly though, mounted $NZA::AUTO_SYNC destination
   exposes the latter to changes, including changes in the ZFS meta
   information. Any change in the data or meta-data at the destination
   is "noticed" by $NZA::AUTO_SYNC as a loss of synchronization
   between the source and the destination, and is getting processed as
   a (recoverable) error condition.

   There is one controlled way to circumvent this limitation - and that 
   is by using $NZA::AUTO_SYNC 'auto-mount' property.

   Please see User Guide or F.A.Q. on the website for more information.

   When destroyed, a given $NZA::AUTO_SYNC service instance
   automatically mounts its destination. Prior to destroy operation,
   you can store the service in persistent memory by performing:
   'setup appliance configuration'

   In all cases, if $NZA::AUTO_SYNC service gets disrupted by
   changes at the destination, it will try to automatically recover
   by performing a rollback of the destination to the previous most
   recently transferred snapshot.


Once created, $NZA::AUTO_SYNC instance can be:

 * modified             see 'setup $NZA::AUTO_SYNC :<service_name> property'
 * saved:		see 'setup appliance configuration'
 * run on-demand:	see 'run $NZA::AUTO_SYNC'
 * destroyed:		see 'destroy $NZA::AUTO_SYNC'
 * restored:		see 'setup appliance configuration'
 * serialized  see 'setup $NZA::AUTO_SYNC serialize-all'
 * unserialized  see 'setup $NZA::AUTO_SYNC unserialize-all'
 * disabled, enabled, reverse-directed, etc.

Also, it is possible to view the service's current status (online,
maintenance, etc.), run-state (idle, running), and log files via
'show $NZA::AUTO_SYNC :<service_name> log' commands.

Easy way to track service' activity interactively, via command:
  $prompt show $NZA::AUTO_SYNC :<service_name> logtail -f

See also: 'help data-replication'

See also: 'show $NZA::AUTO_TIER'

See also: 'setup $NZA::AUTO_TIER <name> property'

See also: 'help keyword clone'
See also: 'setup snapshot <name> clone'

See also: 'run $NZA::AUTO_TIER'
See also: 'destroy $NZA::AUTO_TIER'

See also: 'create $NZA::AUTO_TIER'
See also: 'setup $NZA::AUTO_TIER'

See also: 'setup appliance configuration'
See also: 'record'

See also: 'setup usage'

]]></template>
<template module='AutoSync' name='mount_destination_usage'><![CDATA[
$cmdline
Mount destination of $NZA::AUTO_SYNC service.

Usage: [-y] [-u]

  -y		  Skip confirmation dialog by automatically responding Yes

  -u		  Unmount destination instead of mounting

   It will do mounting (or unmounting if -u) of destination
   folder. If dircontent (/*) option was used - all follders will be
   affected.

   Normally, destination folder will be mounted on deletion of $NZA::AUTO_SYNC
   servce.

   Mount state will not be overwritten by auto-sync run. You should
   unmount folder after using it.

   Note that for $NZA::AUTO_SYNC over 'zfs send/receive',
   it is recommended not to mount the destination. Generally, mounting
   $NZA::AUTO_SYNC destination is an attribute change performed on
   the destination folder (filesystem).

   More importantly though, mounted $NZA::AUTO_SYNC destination
   exposes the latter to changes, including changes in the ZFS meta
   information. Any change in the data or meta-data at the destination
   is "noticed" by $NZA::AUTO_SYNC as a loss of synchronization
   between the source and the destination, and is getting processed as
   a (recoverable) error condition.

EXAMPLES:
   1. Mount destination of service :data-a-000

       ${prompt} setup auto-sync :data-a-000 $NMC::MOUNT_DESTINATION

   2. Unmount destination of service :data-a-000

       ${prompt} setup auto-sync :data-a-000 $NMC::MOUNT_DESTINATION -u


See also: 'setup $NZA::AUTO_SYNC'
See also: 'create $NZA::AUTO_SYNC'

]]></template>
<template module='AutoSync' name='recover_folder_usage'><![CDATA[
$cmdline [-n folder] [-a]

Command tries to guess if destination folder is no longer managed by $NZA::AUTO_SYNC service.
Then it tries to make it available for read/write operations.

Usage:

    [-n folder]    Enter folder name which you need to make available.

    [-a]           Try to guess which folders are not longer managed by
                   service automatically.

EXAMPLES:

   1. For one folder:

        ${prompt}setup $NZA::AUTO_SYNC $NMC::RECOVER_FOLDER -n backup/to/www

   2. For all folders:

        ${prompt}setup $NZA::AUTO_SYNC $NMC::RECOVER_FOLDER -a

]]></template>
<template module='AutoSync' name='edit_paths_usage'><![CDATA[
$cmdline
Edit source and destination paths of $NZA::AUTO_SYNC service.

Usage:

    Command edit-paths allows change source or destination for $NZA::AUTO_SYNC
    service. This maybe handy in following situations:

        - For Remote-to-Local service - remote source folder was relocated.
          Or hostname or IP address changed.

        - For Local-to-Remote service - remote destination was relocated.

        - Special, advanced action were performed. For example initial replica-
          were executed locally to removable, temporary media. Then media were
          placed back to permament remote location. In this case service 
          is tranformed from L2L to L2R direction.

    Four questions will be asked: from host, from fs, to host, to fs.  If field
    doesn't need change, 'Enter' key should be pressed. For Local-to-Remote
    services multiply destinations can be entered. Every destination is separa-
    ted by comma.

    Hostname can be remote host name (like appliance.examle.com), IP address or
    'localhost'.

EXAMPLES:

   1. Local-to-Local service

     From host             : localhost
     From fs               : /data/dest
     To host               : localhost
     To fs                 : /backup

   2. Local-to-Remote service, with multidestination. Service will make repli-
      cation both to remote host and locally.

     From host             : localhost
     From fs               : /data/dest
     To host               : bzbz.example.com, localhost
     To fs                 : /backup, /backup

]]></template>
<template module='AutoSync' name='service_action_all_usage'><![CDATA[
$cmdline
Usage: [-y] [-i interval] $add_option

  -y		  Skip confirmation dialog by automatically responding Yes

  -i <interval>	  Apply${action_str} selectively - filter services
		  $type_str.

]]></template>
<template module='AutoSync' name='service_action_all_usage1'><![CDATA[
  -f              Force $action - $action the service instance and
	          in addition, if the service is currently running,
		  terminate it immediately.
		  Without the -f (force) option, the operation
		  simply removes the service definition from the system
		  database. It will fail though to acquire the
		  corresponding lock if the service happens to be
		  running at the time.
		  The -f option is provided to "force" the '$action'
		  operation to proceed anyway.
	          Caution! Forcing the service to stop running may cause
		  partial and incomplete results.
		  The exact nature of these "results" depends on the
		  concrete service instance and timing.
		  Use the -f option sparingly!

]]></template>
<template module='AutoSync' name='service_action_all_usage2'><![CDATA[
  -f              Force $action - $action the service instance and
	          in addition, if the service is currently running,
		  terminate it immediately.
		  Without the -f (force) option, the operation
		  simply unschedules the service, as far as the future
		  scheduled execution is concerned, and marks the
		  service 'disabled'.
	          Caution! Forcing the service to stop running may cause
		  partial and incomplete results.
		  The exact nature of these "results" depends on the
		  concrete service instance and timing.
		  Use the -f option sparingly!

]]></template>
<template module='AutoSync' name='service_action_all_usage3'><![CDATA[
  -w              Wait for the service to complete. In certain cases
		  it maybe convenient to "dedicate" a given NMC session
		  to a given service run. The -w option blocks NMC
		  execution until the service completes its data
		  transfer, or fails. In the latter case, the error
		  will be displayed immediately.
		  Note that you can always open multiple NMC sessions,
		  and therefore, continue working in parallel.

]]></template>
<template module='AutoSync' name='service_action_all_usage4'><![CDATA[

For background, general information, features and differences between
appliance's 2nd tier data services, please see:

${prompt}help data-replication


See also: 'show $service'
See also: 'setup $service'
See also: 'create $service'

See also: 'setup usage'

See also: 'show appliance auto-services'

]]></template>
<template module='AutoSync' name='show_auto_service_usage'><![CDATA[
$cmdline
Usage: [-v] [-i interval]

  -v		Verbose - show $service service details
  -i <interval>	Show only services for the given time interval, i.e
		$interval.

For background, general information, features and differences between
appliance's 2nd tier data services, please see:

${prompt}help data-replication

Examples:

1) List all $NZA::AUTO_SYNC services: their states (idle, running)
and administrative statuses (disabled, online, maintenance):

${prompt}show $NZA::AUTO_SYNC

This will produce something like:

NAME             SERVICE    FREQUENCY STARTED   STATUS       ENABL  STATE
vol1-a-000       auto-sync  daily     Apr_29    online       true   idle
vol1-users-001   auto-sync  weekly    Apr_29    online       true   idle
vol1-users-000   auto-sync  weekly    Apr_29    online       true   idle
...
...

2) Same as above, remotely. That is, list the services on a
   remote appliance identified by a given hostname
   (host1.xyz-corp.com in the example)

${prompt}switch appliance host1.xyz-corp.com -f
${prompt}show $NZA::AUTO_SYNC

3) List all $NZA::AUTO_SYNC service instances in detail:

${prompt}show $NZA::AUTO_SYNC -v

or alternatively (because the output may be quite lengthy):

${prompt}show $NZA::AUTO_SYNC -v | less

4) List hourly $NZA::AUTO_SYNC services:

${prompt}show $NZA::AUTO_SYNC -i hourly

The valid interval (-i) values are: $interval

Note:
   To search $service instances based on (any combination of their)
   property values, use NMC 'query' command. See 'query -h' for details.


See also: 'help data-replication'

See also: 'show appliance auto-services'

See also: 'create $NZA::AUTO_TIER'
See also: 'create $NZA::AUTO_SYNC'
See also: 'create $NZA::AUTO_SNAP'
See also: 'create $NZA::AUTO_SCRUB'

See also: 'switch appliance'
See also: 'switch group'

See also: 'query'
See also: 'show usage'

See also: 'help'

]]></template>
<template module='AutoSync' name='service_set_property_usage'><![CDATA[
$cmdline
Usage: [-y] [-p value]

  -y	      Skip confirmation dialog by automatically responding Yes.
  -p <value>  New property value

]]></template>
<template module='AutoSync' name='service_set_property_usage1'><![CDATA[

For more information, please see 'create $service -h'

Note:
   To search $service instances based on (any combination of their)
   property values, use NMC 'query' command. See 'query -h' for details.

See also: 'show $service'
See also: 'run $service'
See also: 'create $service'

]]></template>
<template module='AutoSync' name='_show_props_log_stats_fmri'><![CDATA[

  ${NMC::RL_REVERSE}1${NMC::RL_NORMAL}  show $service '$name_suffix' state and properties
     'show $service $name_suffix -v'

  ${NMC::RL_REVERSE}2${NMC::RL_NORMAL}  show $service '$name_suffix' log
     'show $service $name_suffix log'

]]></template>
<template module='AutoSync' name='_show_props_log_stats_fmri1'><![CDATA[
  ${NMC::RL_REVERSE}3${NMC::RL_NORMAL}  show $service '$name_suffix' run-time statistics
     'show $service $name_suffix stats'

]]></template>
<template module='AutoSync' name='_show_props_log_stats_fmri2'><![CDATA[
  ${NMC::RL_REVERSE}4${NMC::RL_NORMAL}  show volume '$vol' status
     'show volume $vol status'

]]></template>
<template module='AutoSync' name='_show_props_log_stats_fmri3'><![CDATA[
  ${NMC::RL_REVERSE}4${NMC::RL_NORMAL}  show volume '$vol' I/O statistics
     'show volume $vol iostat'

]]></template>
<template module='AutoSync' name='setup_folder_qbackup_usage'><![CDATA[

Quickly copy ZFS folder to another place.

	Usage: [-s host] [-d folder]

  -a <host>    host where you want to copy folder.
               Define 'localhost' if destination is local

  -t <folder>  Destination folder

$NMC::QUICK_BACKUP is an easy to use command, which will
let you copy specified folder to another folder, volume,
appliance, or ZFS-capable system. It creates $NZA::AUTO_SYNC
service with default, predefined options. Service runs
once, perform replication, than moves to disabled state.
Service will not be deleted automatically and need to be
deleted manually.

EXAMPLES:

1. Do backup quickly:
nmc\$ setup folder data/a quick-backup

2. Destroy $NMC::QUICK_BACKUP service:
nmc\$ destroy auto-sync :data-a-000

3. Perform backup one more time, incrementally:
nmc\$ setup $NZA::AUTO_SYNC :data-a-000 run

4. Do backup to defined folder without any questions:
nmc\$ setup folder data/a quick-backup -a localhost -t backup/to

See also: 'create $NZA::AUTO_SYNC'
]]></template>
<template module='AutoSync' name='serialize_all_usage'><![CDATA[

Make all auto-sync services run one after another.

Remember that this command will serialize only created services.
If you want to serialize new service run this command again after
adding.

See all: setup &NZA::AUTO_SYNC unserialize-all

]]></template>
<template module='AutoSync' name='unserialize_all_usage'><![CDATA[

Make all auto-sync services run in parallel.

See all: setup &NZA::AUTO_SYNC serialize-all

]]></template>
</templatelist>
