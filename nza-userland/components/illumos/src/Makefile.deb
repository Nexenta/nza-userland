# Copyright (c) 2014, Nexenta Systems, Inc. All rights reserved.

NZA_KERNEL       = nza-kernel
NZA_ROOT         = $(CURDIR)
CODEMGR_WS       = $(NZA_ROOT)/$(NZA_KERNEL)

DEB_VERSION     ?= 40-0-0
DEB_MAINTAINER  ?= Nexenta Systems <maintainer@nexenta.com>

# No source packages:
DPKG_BUILD_FLAGS = -b

MACH = i386

MANIFESTDIR = $(CODEMGR_WS)/usr/src/pkg/packages.$(MACH)

PKGROOT = $(CODEMGR_WS)/proto/root_$(MACH)
TOOLSROOT = $(CODEMGR_WS)/usr/src/tools/proto/root_$(MACH)-nd

# APT repository
APTDIR ?= $(NZA_ROOT)/apt

# All debs, stamps are here:
DEBDIR = $(NZA_ROOT)/debs

PKGMOG := $(shell cd $(MANIFESTDIR) && ls *.mog)
PKGDEB := $(PKGMOG:%.mog=$(DEBDIR)/%.deb-stamp)
PKGIGN := $(shell cd $(DEBDIR) && ls *.deb-stamp)
PKGALL := $(filter-out -- $(PKGIGN), $(PKGMOG:%.mog=%.deb-stamp))
PKGALLRES := $(PKGALL:%.deb-stamp=$(MANIFESTDIR)/%.dep.res)

pkgallbuild: $(PKGALL:%.deb-stamp=$(DEBDIR)/%.deb) $(APTDIR)/conf/distributions
	for p in $(DEBDIR)/*.deb; do \
		echo "processing $$p"; \
		/usr/bin/reprepro -b $(APTDIR) includedeb nza-kernel $$p > $$p.log;  \
	done
	/usr/bin/reprepro -b $(APTDIR) export
	touch $@

$(PKGALL:%.deb-stamp=$(DEBDIR)/%.deb): pkgall
	d=`echo $(@F:%.deb=%)` ; \
	if [ -d "$(DEBDIR)/$$d" ]; then \
	    echo "Building pkg: $$d" ; \
	    cd "$(DEBDIR)/$$d" ; \
	    PATH=/usr/gnu/bin:/usr/bin:$$PATH \
			dpkg-buildpackage $(DPKG_BUILD_FLAGS) > ../$$d.build.log 2>&1 ; \
	fi

pkgall: $(DEBDIR)/.dir-stamp $(DEBDEP)/.dep-stamp
	-/usr/bin/pkgdepend resolve -mvS $(MANIFESTDIR)/*.dep 2> .resolve.err.log
	# The following is a crude hack to make sure SUNWcsd has no dependencies.
	# This is needed to make the apt-clone and onu-deb upgrade procedures work,
	# although the right(TM) fix would be in our handling of name_to_major and
	# minor_perm in the postinst/prerm scripts created by ips2deb.
	cp $(MANIFESTDIR)/SUNWcsd.mog $(MANIFESTDIR)/SUNWcsd.dep.res
	$(TOOLSROOT)/opt/onbld/bin/ips2deb \
	$(PKGALLRES:%=-p%) \
	-d $(PKGROOT) \
	-d $(TOOLSROOT) \
	-o "$(DEBDIR)" \
	--mfg "$(MANIFESTDIR)" \
	--mfe "res" \
	--maintainer "$(DEB_MAINTAINER)" \
	--pv "$(DEB_VERSION)" \
	-s "illumos" > ips2deb.log || (echo "Error while processing packages"; exit 1)
	$(eval PKGERR = $(shell sed -ne '/^Error/ s/Error: //p' < ips2deb.log))
	$(eval TFILES = $(filter-out $(PKGERR), $(PKGALLRES)))
	-touch $(TFILES:$(MANIFESTDIR)/%.dep.res=$(DEBDIR)/%.deb-stamp) || echo "no files to touch"

deb: $(PKGDEP) $(PKGDEB)
apt: $(DEBDIR)/.apt-stamp
clean:
	rm -rf $(APTDIR) $(DEBDIR) pkgallbuild ips2deb.log .resolve.err.log
onedeb:
	if test ! -f $(MANIFESTDIR)/$(DEB).mog; then \
	    echo "No $(DEB).mog found in $(MANIFESTDIR)" ; \
	    exit 1; \
	fi;
	$(TOOLSROOT)/opt/onbld/bin/ips2deb \
	-p "$(MANIFESTDIR)/$(DEB).mog" \
	-d $(PKGROOT) \
	-d $(TOOLSROOT) \
	-o "$(DEBDIR)" \
	--mfg "$(MANIFESTDIR)" \
	--mfe "mog" \
	--maintainer "$(DEB_MAINTAINER)" \
	--pv "$(DEB_VERSION)" \
	--category "illumos" || echo "Never mind"

	if [ -d "$(DEBDIR)/$(DEB)" ]; then \
	    echo "Building pkg: $(DEB)" ; \
	    cd "$(DEBDIR)/$(DEB)" ; \
	    PATH=/usr/gnu/bin:/usr/bin:$$PATH \
			dpkg-buildpackage $(DPKG_BUILD_FLAGS) > ../$(DEB).build.log 2>&1 ; \
	fi
	echo "processing $(DEB)"
	d=`awk '/^Package: /{print $$2}' $(DEBDIR)/$(DEB)/debian/control` ; \
	/usr/bin/reprepro -b $(APTDIR) remove nza-kernel $${d} ; \
	/usr/bin/reprepro -b $(APTDIR) includedeb nza-kernel $(DEBDIR)/$${d}_$(DEB_VERSION)_solaris-$(MACH).deb > $(DEBDIR)/$${d}.log ; \
	/usr/bin/reprepro -b $(APTDIR) export ;

.PHONY: deb apt clean onedeb pkgall

$(DEBDEP)/.dep-stamp:
	for mog in $(MANIFESTDIR)/*.mog; do \
		pkg=`echo $$mog | awk -F/ '{print $$NF}'|cut -d. -f1`; \
		echo "Generating dependencies for $$pkg"; \
		/usr/bin/pkgdepend generate -d $(PKGROOT) -d $(TOOLSROOT) -m -D 'PLATFORM=i86pc' \
		-D 'ISALIST=amd64'  -D 'ISALIST=i386' $$mog  > $(MANIFESTDIR)/$$pkg.dep 2>&1; \
	done

$(DEBDIR)/%.deb-stamp: $(MANIFESTDIR)/%.mog $(DEBDIR)/.dir-stamp $(DEBDEP)/.dep-stamp
	$(TOOLSROOT)/opt/onbld/bin/ips2deb \
	-p $< \
	-d $(PKGROOT) \
	-d $(TOOLSROOT) \
	-o "$(DEBDIR)" \
	--mfg "$(MANIFESTDIR)" \
	--mfe "mog" \
	--maintainer "$(DEB_MAINTAINER)" \
	--pv "$(DEB_VERSION)" \
	--category "illumos" || (echo "Error while processing: $<"; exit 1)

	d=`echo $(<F:%.mog=%)` ; \
	if [ -d "$(DEBDIR)/$$d" ]; then \
	    echo "Building pkg: $$d" ; \
	    cd "$(DEBDIR)/$$d" ; \
	    PATH=/usr/gnu/bin:/usr/bin:$$PATH \
			dpkg-buildpackage $(DPKG_BUILD_FLAGS) > ../$$d.build.log 2>&1 ; \
	fi

	touch  $@

$(DEBDIR)/.deb-commit-stamp: $(PKGDEB) $(APTDIR)/conf/distributions
	for p in $(DEBDIR)/*.deb; do \
		echo "processing $$p"; \
		/usr/bin/reprepro -b $(APTDIR) includedeb nza-kernel $$p > $$p.log;  \
	done
	touch $@

$(DEBDIR)/.apt-stamp: $(DEBDIR)/.deb-commit-stamp
	/usr/bin/reprepro -b $(APTDIR) export
	touch $@

$(APTDIR)/conf/distributions:
	mkdir -p $(@D)
	rm -f $@
	echo "Origin: Kernel APT" >> $@
	echo "Codename: nza-kernel" >> $@
	echo "Architectures: solaris-i386" >> $@
	echo "Components: main" >> $@
	echo "DebIndices: Packages Release . .gz .bz2" >> $@
	echo "Description: Kernel repository" >> $@

$(DEBDIR)/.dir-stamp:
	mkdir -p $(@D)
	touch $@

